{"ast":null,"code":"var _jsxFileName = \"X:\\\\redu\\\\gradway\\\\frontend\\\\src\\\\context\\\\ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext } from 'react';\nimport useTheme from '../hooks/useTheme';\n\n// Create a context for theme data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext(null);\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const themeData = useTheme();\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: themeData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the theme context\n_s(ThemeProvider, \"luPLfAFKUDew9xFHlQiq0FJEZ/k=\", false, function () {\n  return [useTheme];\n});\n_c = ThemeProvider;\nexport const useThemeContext = () => {\n  _s2();\n  const context = useContext(ThemeContext);\n  if (context === null) {\n    throw new Error('useThemeContext must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s2(useThemeContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useTheme","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","themeData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useThemeContext","_s2","context","Error","$RefreshReg$"],"sources":["X:/redu/gradway/frontend/src/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext } from 'react';\r\nimport useTheme from '../hooks/useTheme';\r\n\r\n// Create a context for theme data\r\nconst ThemeContext = createContext(null);\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const themeData = useTheme();\r\n  \r\n  return (\r\n    <ThemeContext.Provider value={themeData}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the theme context\r\nexport const useThemeContext = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (context === null) {\r\n    throw new Error('useThemeContext must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACxD,OAAOC,QAAQ,MAAM,mBAAmB;;AAExC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,gBAAGL,aAAa,CAAC,IAAI,CAAC;AAExC,OAAO,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAMC,SAAS,GAAGP,QAAQ,CAAC,CAAC;EAE5B,oBACEE,OAAA,CAACC,YAAY,CAACK,QAAQ;IAACC,KAAK,EAAEF,SAAU;IAAAF,QAAA,EACrCA;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;;AAED;AAAAP,EAAA,CAVaF,aAAa;EAAA,QACNJ,QAAQ;AAAA;AAAAc,EAAA,GADfV,aAAa;AAW1B,OAAO,MAAMW,eAAe,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACnC,MAAMC,OAAO,GAAGlB,UAAU,CAACI,YAAY,CAAC;EACxC,IAAIc,OAAO,KAAK,IAAI,EAAE;IACpB,MAAM,IAAIC,KAAK,CAAC,qDAAqD,CAAC;EACxE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,eAAe;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}