{"ast":null,"code":"const API_URL = 'http://localhost:5000/api';\nconst handleResponse = async response => {\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Something went wrong');\n  }\n  return response.json();\n};\nconst getAuthHeaders = () => {\n  const token = localStorage.getItem('token');\n  return {\n    'Content-Type': 'application/json',\n    'Authorization': `Bearer ${token}`\n  };\n};\n\n// Public API calls\nexport const fetchServices = async () => {\n  try {\n    const response = await fetch(`${API_URL}/services`);\n    return handleResponse(response);\n  } catch (error) {\n    console.error('Error fetching services:', error);\n    throw error;\n  }\n};\nexport const fetchCourses = async () => {\n  try {\n    const response = await fetch(`${API_URL}/courses`);\n    return handleResponse(response);\n  } catch (error) {\n    console.error('Error fetching courses:', error);\n    throw error;\n  }\n};\nexport const fetchFeaturedServices = async () => {\n  try {\n    const response = await fetch(`${API_URL}/services/featured`);\n    return handleResponse(response);\n  } catch (error) {\n    console.error('Error fetching featured services:', error);\n    throw error;\n  }\n};\nexport const fetchFeaturedCourses = async () => {\n  try {\n    const response = await fetch(`${API_URL}/courses/featured`);\n    return handleResponse(response);\n  } catch (error) {\n    console.error('Error fetching featured courses:', error);\n    throw error;\n  }\n};\n\n// Admin API calls\nexport const adminAddService = async serviceData => {\n  try {\n    const response = await fetch(`${API_URL}/admin/services`, {\n      method: 'POST',\n      headers: getAuthHeaders(),\n      body: JSON.stringify(serviceData)\n    });\n    return handleResponse(response);\n  } catch (error) {\n    console.error('Error adding service:', error);\n    throw error;\n  }\n};\nexport const adminUpdateService = async (id, serviceData) => {\n  try {\n    const response = await fetch(`${API_URL}/admin/services/${id}`, {\n      method: 'PUT',\n      headers: getAuthHeaders(),\n      body: JSON.stringify(serviceData)\n    });\n    return handleResponse(response);\n  } catch (error) {\n    console.error('Error updating service:', error);\n    throw error;\n  }\n};\nexport const adminDeleteService = async id => {\n  try {\n    const response = await fetch(`${API_URL}/admin/services/${id}`, {\n      method: 'DELETE',\n      headers: getAuthHeaders()\n    });\n    return handleResponse(response);\n  } catch (error) {\n    console.error('Error deleting service:', error);\n    throw error;\n  }\n};\nexport const adminAddCourse = async courseData => {\n  try {\n    const response = await fetch(`${API_URL}/admin/courses`, {\n      method: 'POST',\n      headers: getAuthHeaders(),\n      body: JSON.stringify(courseData)\n    });\n    return handleResponse(response);\n  } catch (error) {\n    console.error('Error adding course:', error);\n    throw error;\n  }\n};\nexport const adminUpdateCourse = async (id, courseData) => {\n  try {\n    const response = await fetch(`${API_URL}/admin/courses/${id}`, {\n      method: 'PUT',\n      headers: getAuthHeaders(),\n      body: JSON.stringify(courseData)\n    });\n    return handleResponse(response);\n  } catch (error) {\n    console.error('Error updating course:', error);\n    throw error;\n  }\n};\nexport const adminDeleteCourse = async id => {\n  try {\n    const response = await fetch(`${API_URL}/admin/courses/${id}`, {\n      method: 'DELETE',\n      headers: getAuthHeaders()\n    });\n    return handleResponse(response);\n  } catch (error) {\n    console.error('Error deleting course:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_URL","handleResponse","response","ok","error","json","Error","getAuthHeaders","token","localStorage","getItem","fetchServices","fetch","console","fetchCourses","fetchFeaturedServices","fetchFeaturedCourses","adminAddService","serviceData","method","headers","body","JSON","stringify","adminUpdateService","id","adminDeleteService","adminAddCourse","courseData","adminUpdateCourse","adminDeleteCourse"],"sources":["X:/gradway/frontend/src/services/api.js"],"sourcesContent":["const API_URL = 'http://localhost:5000/api';\n\nconst handleResponse = async (response) => {\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Something went wrong');\n  }\n  return response.json();\n};\n\nconst getAuthHeaders = () => {\n  const token = localStorage.getItem('token');\n  return {\n    'Content-Type': 'application/json',\n    'Authorization': `Bearer ${token}`\n  };\n};\n\n// Public API calls\nexport const fetchServices = async () => {\n  try {\n    const response = await fetch(`${API_URL}/services`);\n    return handleResponse(response);\n  } catch (error) {\n    console.error('Error fetching services:', error);\n    throw error;\n  }\n};\n\nexport const fetchCourses = async () => {\n  try {\n    const response = await fetch(`${API_URL}/courses`);\n    return handleResponse(response);\n  } catch (error) {\n    console.error('Error fetching courses:', error);\n    throw error;\n  }\n};\n\nexport const fetchFeaturedServices = async () => {\n  try {\n    const response = await fetch(`${API_URL}/services/featured`);\n    return handleResponse(response);\n  } catch (error) {\n    console.error('Error fetching featured services:', error);\n    throw error;\n  }\n};\n\nexport const fetchFeaturedCourses = async () => {\n  try {\n    const response = await fetch(`${API_URL}/courses/featured`);\n    return handleResponse(response);\n  } catch (error) {\n    console.error('Error fetching featured courses:', error);\n    throw error;\n  }\n};\n\n// Admin API calls\nexport const adminAddService = async (serviceData) => {\n  try {\n    const response = await fetch(`${API_URL}/admin/services`, {\n      method: 'POST',\n      headers: getAuthHeaders(),\n      body: JSON.stringify(serviceData)\n    });\n    return handleResponse(response);\n  } catch (error) {\n    console.error('Error adding service:', error);\n    throw error;\n  }\n};\n\nexport const adminUpdateService = async (id, serviceData) => {\n  try {\n    const response = await fetch(`${API_URL}/admin/services/${id}`, {\n      method: 'PUT',\n      headers: getAuthHeaders(),\n      body: JSON.stringify(serviceData)\n    });\n    return handleResponse(response);\n  } catch (error) {\n    console.error('Error updating service:', error);\n    throw error;\n  }\n};\n\nexport const adminDeleteService = async (id) => {\n  try {\n    const response = await fetch(`${API_URL}/admin/services/${id}`, {\n      method: 'DELETE',\n      headers: getAuthHeaders()\n    });\n    return handleResponse(response);\n  } catch (error) {\n    console.error('Error deleting service:', error);\n    throw error;\n  }\n};\n\nexport const adminAddCourse = async (courseData) => {\n  try {\n    const response = await fetch(`${API_URL}/admin/courses`, {\n      method: 'POST',\n      headers: getAuthHeaders(),\n      body: JSON.stringify(courseData)\n    });\n    return handleResponse(response);\n  } catch (error) {\n    console.error('Error adding course:', error);\n    throw error;\n  }\n};\n\nexport const adminUpdateCourse = async (id, courseData) => {\n  try {\n    const response = await fetch(`${API_URL}/admin/courses/${id}`, {\n      method: 'PUT',\n      headers: getAuthHeaders(),\n      body: JSON.stringify(courseData)\n    });\n    return handleResponse(response);\n  } catch (error) {\n    console.error('Error updating course:', error);\n    throw error;\n  }\n};\n\nexport const adminDeleteCourse = async (id) => {\n  try {\n    const response = await fetch(`${API_URL}/admin/courses/${id}`, {\n      method: 'DELETE',\n      headers: getAuthHeaders()\n    });\n    return handleResponse(response);\n  } catch (error) {\n    console.error('Error deleting course:', error);\n    throw error;\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}