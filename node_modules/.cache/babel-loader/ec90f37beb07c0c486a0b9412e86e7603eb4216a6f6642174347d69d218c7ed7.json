{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests if available\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Services\nexport const servicesApi = {\n  getAll: () => api.get('/services'),\n  getById: id => api.get(`/services/${id}`),\n  create: data => api.post('/services', data),\n  update: (id, data) => api.put(`/services/${id}`, data),\n  delete: id => api.delete(`/services/${id}`)\n};\n\n// Courses\nexport const coursesApi = {\n  getAll: () => api.get('/courses'),\n  getById: id => api.get(`/courses/${id}`),\n  create: data => api.post('/courses', data),\n  update: (id, data) => api.put(`/courses/${id}`, data),\n  delete: id => api.delete(`/courses/${id}`)\n};\n\n// Testimonials\nexport const testimonialsApi = {\n  getAll: () => api.get('/testimonials'),\n  getById: id => api.get(`/testimonials/${id}`),\n  create: data => api.post('/testimonials', data),\n  update: (id, data) => api.put(`/testimonials/${id}`, data),\n  delete: id => api.delete(`/testimonials/${id}`)\n};\n\n// Contact\nexport const contactApi = {\n  submit: data => api.post('/contact', data),\n  getAll: () => api.get('/contact'),\n  delete: id => api.delete(`/contact/${id}`)\n};\n\n// Auth\nexport const authApi = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/register', userData),\n  verifyToken: () => api.get('/auth/verify')\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","servicesApi","getAll","get","getById","id","data","post","update","put","delete","coursesApi","testimonialsApi","contactApi","submit","authApi","login","credentials","register","userData","verifyToken"],"sources":["X:/gradway/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add token to requests if available\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Services\nexport const servicesApi = {\n  getAll: () => api.get('/services'),\n  getById: (id) => api.get(`/services/${id}`),\n  create: (data) => api.post('/services', data),\n  update: (id, data) => api.put(`/services/${id}`, data),\n  delete: (id) => api.delete(`/services/${id}`),\n};\n\n// Courses\nexport const coursesApi = {\n  getAll: () => api.get('/courses'),\n  getById: (id) => api.get(`/courses/${id}`),\n  create: (data) => api.post('/courses', data),\n  update: (id, data) => api.put(`/courses/${id}`, data),\n  delete: (id) => api.delete(`/courses/${id}`),\n};\n\n// Testimonials\nexport const testimonialsApi = {\n  getAll: () => api.get('/testimonials'),\n  getById: (id) => api.get(`/testimonials/${id}`),\n  create: (data) => api.post('/testimonials', data),\n  update: (id, data) => api.put(`/testimonials/${id}`, data),\n  delete: (id) => api.delete(`/testimonials/${id}`),\n};\n\n// Contact\nexport const contactApi = {\n  submit: (data) => api.post('/contact', data),\n  getAll: () => api.get('/contact'),\n  delete: (id) => api.delete(`/contact/${id}`),\n};\n\n// Auth\nexport const authApi = {\n  login: (credentials) => api.post('/auth/login', credentials),\n  register: (userData) => api.post('/auth/register', userData),\n  verifyToken: () => api.get('/auth/verify'),\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}