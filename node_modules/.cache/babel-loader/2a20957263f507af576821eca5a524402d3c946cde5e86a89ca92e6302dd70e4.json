{"ast":null,"code":"import{createApi,fetchBaseQuery}from'@reduxjs/toolkit/query/react';export const apiSlice=createApi({reducerPath:'api',baseQuery:fetchBaseQuery({baseUrl:process.env.REACT_APP_API_URL||'http://localhost:5000/api',prepareHeaders:(headers,_ref)=>{var _getState$auth;let{getState}=_ref;const token=(_getState$auth=getState().auth)===null||_getState$auth===void 0?void 0:_getState$auth.token;if(token){headers.set('authorization',`Bearer ${token}`);}return headers;}}),tagTypes:['Content','Courses','Services','Testimonials','Contact'],endpoints:builder=>({// Content endpoints\ngetContents:builder.query({query:()=>'/public/contents',providesTags:['Content']}),updateContent:builder.mutation({query:_ref2=>{let{id,data}=_ref2;return{url:`/admin/contents/${id}`,method:'PUT',body:data};},invalidatesTags:['Content']}),// Course endpoints\ngetCourses:builder.query({query:()=>'/public/courses',providesTags:['Courses']}),createCourse:builder.mutation({query:data=>({url:'/admin/courses',method:'POST',body:data}),invalidatesTags:['Courses']}),updateCourse:builder.mutation({query:_ref3=>{let{id,data}=_ref3;return{url:`/admin/courses/${id}`,method:'PUT',body:data};},invalidatesTags:['Courses']}),deleteCourse:builder.mutation({query:id=>({url:`/admin/courses/${id}`,method:'DELETE'}),invalidatesTags:['Courses']}),// Service endpoints\ngetServices:builder.query({query:()=>'/public/services',providesTags:['Services']}),createService:builder.mutation({query:data=>({url:'/admin/services',method:'POST',body:data}),invalidatesTags:['Services']}),updateService:builder.mutation({query:_ref4=>{let{id,data}=_ref4;return{url:`/admin/services/${id}`,method:'PUT',body:data};},invalidatesTags:['Services']}),deleteService:builder.mutation({query:id=>({url:`/admin/services/${id}`,method:'DELETE'}),invalidatesTags:['Services']}),// Testimonial endpoints\ngetTestimonials:builder.query({query:()=>'/public/testimonials',providesTags:['Testimonials']}),createTestimonial:builder.mutation({query:data=>({url:'/admin/testimonials',method:'POST',body:data}),invalidatesTags:['Testimonials']}),updateTestimonial:builder.mutation({query:_ref5=>{let{id,data}=_ref5;return{url:`/admin/testimonials/${id}`,method:'PUT',body:data};},invalidatesTags:['Testimonials']}),deleteTestimonial:builder.mutation({query:id=>({url:`/admin/testimonials/${id}`,method:'DELETE'}),invalidatesTags:['Testimonials']}),// Contact endpoints\nsubmitContact:builder.mutation({query:data=>({url:'/public/contact',method:'POST',body:data}),invalidatesTags:['Contact']})})});export const{useGetContentsQuery,useUpdateContentMutation,useGetCoursesQuery,useCreateCourseMutation,useUpdateCourseMutation,useDeleteCourseMutation,useGetServicesQuery,useCreateServiceMutation,useUpdateServiceMutation,useDeleteServiceMutation,useGetTestimonialsQuery,useCreateTestimonialMutation,useUpdateTestimonialMutation,useDeleteTestimonialMutation,useSubmitContactMutation}=apiSlice;","map":{"version":3,"names":["createApi","fetchBaseQuery","apiSlice","reducerPath","baseQuery","baseUrl","process","env","REACT_APP_API_URL","prepareHeaders","headers","_ref","_getState$auth","getState","token","auth","set","tagTypes","endpoints","builder","getContents","query","providesTags","updateContent","mutation","_ref2","id","data","url","method","body","invalidatesTags","getCourses","createCourse","updateCourse","_ref3","deleteCourse","getServices","createService","updateService","_ref4","deleteService","getTestimonials","createTestimonial","updateTestimonial","_ref5","deleteTestimonial","submitContact","useGetContentsQuery","useUpdateContentMutation","useGetCoursesQuery","useCreateCourseMutation","useUpdateCourseMutation","useDeleteCourseMutation","useGetServicesQuery","useCreateServiceMutation","useUpdateServiceMutation","useDeleteServiceMutation","useGetTestimonialsQuery","useCreateTestimonialMutation","useUpdateTestimonialMutation","useDeleteTestimonialMutation","useSubmitContactMutation"],"sources":["X:/gradway/frontend/src/features/api/apiSlice.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const apiSlice = createApi({\n  reducerPath: 'api',\n  baseQuery: fetchBaseQuery({ \n    baseUrl: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n    prepareHeaders: (headers, { getState }) => {\n      const token = getState().auth?.token;\n      if (token) {\n        headers.set('authorization', `Bearer ${token}`);\n      }\n      return headers;\n    },\n  }),\n  tagTypes: ['Content', 'Courses', 'Services', 'Testimonials', 'Contact'],\n  endpoints: (builder) => ({\n    // Content endpoints\n    getContents: builder.query({\n      query: () => '/public/contents',\n      providesTags: ['Content'],\n    }),\n    updateContent: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/admin/contents/${id}`,\n        method: 'PUT',\n        body: data,\n      }),\n      invalidatesTags: ['Content'],\n    }),\n\n    // Course endpoints\n    getCourses: builder.query({\n      query: () => '/public/courses',\n      providesTags: ['Courses'],\n    }),\n    createCourse: builder.mutation({\n      query: (data) => ({\n        url: '/admin/courses',\n        method: 'POST',\n        body: data,\n      }),\n      invalidatesTags: ['Courses'],\n    }),\n    updateCourse: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/admin/courses/${id}`,\n        method: 'PUT',\n        body: data,\n      }),\n      invalidatesTags: ['Courses'],\n    }),\n    deleteCourse: builder.mutation({\n      query: (id) => ({\n        url: `/admin/courses/${id}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Courses'],\n    }),\n\n    // Service endpoints\n    getServices: builder.query({\n      query: () => '/public/services',\n      providesTags: ['Services'],\n    }),\n    createService: builder.mutation({\n      query: (data) => ({\n        url: '/admin/services',\n        method: 'POST',\n        body: data,\n      }),\n      invalidatesTags: ['Services'],\n    }),\n    updateService: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/admin/services/${id}`,\n        method: 'PUT',\n        body: data,\n      }),\n      invalidatesTags: ['Services'],\n    }),\n    deleteService: builder.mutation({\n      query: (id) => ({\n        url: `/admin/services/${id}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Services'],\n    }),\n\n    // Testimonial endpoints\n    getTestimonials: builder.query({\n      query: () => '/public/testimonials',\n      providesTags: ['Testimonials'],\n    }),\n    createTestimonial: builder.mutation({\n      query: (data) => ({\n        url: '/admin/testimonials',\n        method: 'POST',\n        body: data,\n      }),\n      invalidatesTags: ['Testimonials'],\n    }),\n    updateTestimonial: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/admin/testimonials/${id}`,\n        method: 'PUT',\n        body: data,\n      }),\n      invalidatesTags: ['Testimonials'],\n    }),\n    deleteTestimonial: builder.mutation({\n      query: (id) => ({\n        url: `/admin/testimonials/${id}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Testimonials'],\n    }),\n\n    // Contact endpoints\n    submitContact: builder.mutation({\n      query: (data) => ({\n        url: '/public/contact',\n        method: 'POST',\n        body: data,\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n  }),\n});\n\nexport const {\n  useGetContentsQuery,\n  useUpdateContentMutation,\n  useGetCoursesQuery,\n  useCreateCourseMutation,\n  useUpdateCourseMutation,\n  useDeleteCourseMutation,\n  useGetServicesQuery,\n  useCreateServiceMutation,\n  useUpdateServiceMutation,\n  useDeleteServiceMutation,\n  useGetTestimonialsQuery,\n  useCreateTestimonialMutation,\n  useUpdateTestimonialMutation,\n  useDeleteTestimonialMutation,\n  useSubmitContactMutation,\n} = apiSlice;\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,cAAc,KAAQ,8BAA8B,CAExE,MAAO,MAAM,CAAAC,QAAQ,CAAGF,SAAS,CAAC,CAChCG,WAAW,CAAE,KAAK,CAClBC,SAAS,CAAEH,cAAc,CAAC,CACxBI,OAAO,CAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,2BAA2B,CACrEC,cAAc,CAAEA,CAACC,OAAO,CAAAC,IAAA,GAAmB,KAAAC,cAAA,IAAjB,CAAEC,QAAS,CAAC,CAAAF,IAAA,CACpC,KAAM,CAAAG,KAAK,EAAAF,cAAA,CAAGC,QAAQ,CAAC,CAAC,CAACE,IAAI,UAAAH,cAAA,iBAAfA,cAAA,CAAiBE,KAAK,CACpC,GAAIA,KAAK,CAAE,CACTJ,OAAO,CAACM,GAAG,CAAC,eAAe,CAAE,UAAUF,KAAK,EAAE,CAAC,CACjD,CACA,MAAO,CAAAJ,OAAO,CAChB,CACF,CAAC,CAAC,CACFO,QAAQ,CAAE,CAAC,SAAS,CAAE,SAAS,CAAE,UAAU,CAAE,cAAc,CAAE,SAAS,CAAC,CACvEC,SAAS,CAAGC,OAAO,GAAM,CACvB;AACAC,WAAW,CAAED,OAAO,CAACE,KAAK,CAAC,CACzBA,KAAK,CAAEA,CAAA,GAAM,kBAAkB,CAC/BC,YAAY,CAAE,CAAC,SAAS,CAC1B,CAAC,CAAC,CACFC,aAAa,CAAEJ,OAAO,CAACK,QAAQ,CAAC,CAC9BH,KAAK,CAAEI,KAAA,MAAC,CAAEC,EAAE,CAAEC,IAAK,CAAC,CAAAF,KAAA,OAAM,CACxBG,GAAG,CAAE,mBAAmBF,EAAE,EAAE,CAC5BG,MAAM,CAAE,KAAK,CACbC,IAAI,CAAEH,IACR,CAAC,EAAC,CACFI,eAAe,CAAE,CAAC,SAAS,CAC7B,CAAC,CAAC,CAEF;AACAC,UAAU,CAAEb,OAAO,CAACE,KAAK,CAAC,CACxBA,KAAK,CAAEA,CAAA,GAAM,iBAAiB,CAC9BC,YAAY,CAAE,CAAC,SAAS,CAC1B,CAAC,CAAC,CACFW,YAAY,CAAEd,OAAO,CAACK,QAAQ,CAAC,CAC7BH,KAAK,CAAGM,IAAI,GAAM,CAChBC,GAAG,CAAE,gBAAgB,CACrBC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEH,IACR,CAAC,CAAC,CACFI,eAAe,CAAE,CAAC,SAAS,CAC7B,CAAC,CAAC,CACFG,YAAY,CAAEf,OAAO,CAACK,QAAQ,CAAC,CAC7BH,KAAK,CAAEc,KAAA,MAAC,CAAET,EAAE,CAAEC,IAAK,CAAC,CAAAQ,KAAA,OAAM,CACxBP,GAAG,CAAE,kBAAkBF,EAAE,EAAE,CAC3BG,MAAM,CAAE,KAAK,CACbC,IAAI,CAAEH,IACR,CAAC,EAAC,CACFI,eAAe,CAAE,CAAC,SAAS,CAC7B,CAAC,CAAC,CACFK,YAAY,CAAEjB,OAAO,CAACK,QAAQ,CAAC,CAC7BH,KAAK,CAAGK,EAAE,GAAM,CACdE,GAAG,CAAE,kBAAkBF,EAAE,EAAE,CAC3BG,MAAM,CAAE,QACV,CAAC,CAAC,CACFE,eAAe,CAAE,CAAC,SAAS,CAC7B,CAAC,CAAC,CAEF;AACAM,WAAW,CAAElB,OAAO,CAACE,KAAK,CAAC,CACzBA,KAAK,CAAEA,CAAA,GAAM,kBAAkB,CAC/BC,YAAY,CAAE,CAAC,UAAU,CAC3B,CAAC,CAAC,CACFgB,aAAa,CAAEnB,OAAO,CAACK,QAAQ,CAAC,CAC9BH,KAAK,CAAGM,IAAI,GAAM,CAChBC,GAAG,CAAE,iBAAiB,CACtBC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEH,IACR,CAAC,CAAC,CACFI,eAAe,CAAE,CAAC,UAAU,CAC9B,CAAC,CAAC,CACFQ,aAAa,CAAEpB,OAAO,CAACK,QAAQ,CAAC,CAC9BH,KAAK,CAAEmB,KAAA,MAAC,CAAEd,EAAE,CAAEC,IAAK,CAAC,CAAAa,KAAA,OAAM,CACxBZ,GAAG,CAAE,mBAAmBF,EAAE,EAAE,CAC5BG,MAAM,CAAE,KAAK,CACbC,IAAI,CAAEH,IACR,CAAC,EAAC,CACFI,eAAe,CAAE,CAAC,UAAU,CAC9B,CAAC,CAAC,CACFU,aAAa,CAAEtB,OAAO,CAACK,QAAQ,CAAC,CAC9BH,KAAK,CAAGK,EAAE,GAAM,CACdE,GAAG,CAAE,mBAAmBF,EAAE,EAAE,CAC5BG,MAAM,CAAE,QACV,CAAC,CAAC,CACFE,eAAe,CAAE,CAAC,UAAU,CAC9B,CAAC,CAAC,CAEF;AACAW,eAAe,CAAEvB,OAAO,CAACE,KAAK,CAAC,CAC7BA,KAAK,CAAEA,CAAA,GAAM,sBAAsB,CACnCC,YAAY,CAAE,CAAC,cAAc,CAC/B,CAAC,CAAC,CACFqB,iBAAiB,CAAExB,OAAO,CAACK,QAAQ,CAAC,CAClCH,KAAK,CAAGM,IAAI,GAAM,CAChBC,GAAG,CAAE,qBAAqB,CAC1BC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEH,IACR,CAAC,CAAC,CACFI,eAAe,CAAE,CAAC,cAAc,CAClC,CAAC,CAAC,CACFa,iBAAiB,CAAEzB,OAAO,CAACK,QAAQ,CAAC,CAClCH,KAAK,CAAEwB,KAAA,MAAC,CAAEnB,EAAE,CAAEC,IAAK,CAAC,CAAAkB,KAAA,OAAM,CACxBjB,GAAG,CAAE,uBAAuBF,EAAE,EAAE,CAChCG,MAAM,CAAE,KAAK,CACbC,IAAI,CAAEH,IACR,CAAC,EAAC,CACFI,eAAe,CAAE,CAAC,cAAc,CAClC,CAAC,CAAC,CACFe,iBAAiB,CAAE3B,OAAO,CAACK,QAAQ,CAAC,CAClCH,KAAK,CAAGK,EAAE,GAAM,CACdE,GAAG,CAAE,uBAAuBF,EAAE,EAAE,CAChCG,MAAM,CAAE,QACV,CAAC,CAAC,CACFE,eAAe,CAAE,CAAC,cAAc,CAClC,CAAC,CAAC,CAEF;AACAgB,aAAa,CAAE5B,OAAO,CAACK,QAAQ,CAAC,CAC9BH,KAAK,CAAGM,IAAI,GAAM,CAChBC,GAAG,CAAE,iBAAiB,CACtBC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEH,IACR,CAAC,CAAC,CACFI,eAAe,CAAE,CAAC,SAAS,CAC7B,CAAC,CACH,CAAC,CACH,CAAC,CAAC,CAEF,MAAO,MAAM,CACXiB,mBAAmB,CACnBC,wBAAwB,CACxBC,kBAAkB,CAClBC,uBAAuB,CACvBC,uBAAuB,CACvBC,uBAAuB,CACvBC,mBAAmB,CACnBC,wBAAwB,CACxBC,wBAAwB,CACxBC,wBAAwB,CACxBC,uBAAuB,CACvBC,4BAA4B,CAC5BC,4BAA4B,CAC5BC,4BAA4B,CAC5BC,wBACF,CAAC,CAAG5D,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}