{"ast":null,"code":"import axios from 'axios';\nconst API_URL = '/api/content';\n\n// Get all content\nexport const getAllContent = async () => {\n  const response = await axios.get(API_URL);\n  return response.data;\n};\n\n// Get content by page\nexport const getContentByPage = async page => {\n  const response = await axios.get(`${API_URL}/${page}`);\n  return response.data;\n};\n\n// Create content (admin only)\nexport const createContent = async (contentData, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.post(API_URL, contentData, config);\n  return response.data;\n};\n\n// Update content (admin only)\nexport const updateContent = async (contentId, contentData, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.put(`${API_URL}/${contentId}`, contentData, config);\n  return response.data;\n};\n\n// Delete content (admin only)\nexport const deleteContent = async (contentId, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.delete(`${API_URL}/${contentId}`, config);\n  return response.data;\n};\nconst contentService = {\n  getAllContent,\n  getContentByPage,\n  createContent,\n  updateContent,\n  deleteContent\n};\nexport default contentService;","map":{"version":3,"names":["axios","API_URL","getAllContent","response","get","data","getContentByPage","page","createContent","contentData","token","config","headers","Authorization","post","updateContent","contentId","put","deleteContent","delete","contentService"],"sources":["X:/gradway/frontend/src/services/contentService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = '/api/content';\r\n\r\n// Get all content\r\nexport const getAllContent = async () => {\r\n  const response = await axios.get(API_URL);\r\n  return response.data;\r\n};\r\n\r\n// Get content by page\r\nexport const getContentByPage = async (page) => {\r\n  const response = await axios.get(`${API_URL}/${page}`);\r\n  return response.data;\r\n};\r\n\r\n// Create content (admin only)\r\nexport const createContent = async (contentData, token) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  const response = await axios.post(API_URL, contentData, config);\r\n  return response.data;\r\n};\r\n\r\n// Update content (admin only)\r\nexport const updateContent = async (contentId, contentData, token) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  const response = await axios.put(`${API_URL}/${contentId}`, contentData, config);\r\n  return response.data;\r\n};\r\n\r\n// Delete content (admin only)\r\nexport const deleteContent = async (contentId, token) => {\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  const response = await axios.delete(`${API_URL}/${contentId}`, config);\r\n  return response.data;\r\n};\r\n\r\nconst contentService = {\r\n  getAllContent,\r\n  getContentByPage,\r\n  createContent,\r\n  updateContent,\r\n  deleteContent,\r\n};\r\n\r\nexport default contentService; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,cAAc;;AAE9B;AACA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACH,OAAO,CAAC;EACzC,OAAOE,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,IAAI,IAAK;EAC9C,MAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,IAAIM,IAAI,EAAE,CAAC;EACtD,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMG,aAAa,GAAG,MAAAA,CAAOC,WAAW,EAAEC,KAAK,KAAK;EACzD,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUH,KAAK;IAChC;EACF,CAAC;EACD,MAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACc,IAAI,CAACb,OAAO,EAAEQ,WAAW,EAAEE,MAAM,CAAC;EAC/D,OAAOR,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMU,aAAa,GAAG,MAAAA,CAAOC,SAAS,EAAEP,WAAW,EAAEC,KAAK,KAAK;EACpE,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUH,KAAK;IAChC;EACF,CAAC;EACD,MAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACiB,GAAG,CAAC,GAAGhB,OAAO,IAAIe,SAAS,EAAE,EAAEP,WAAW,EAAEE,MAAM,CAAC;EAChF,OAAOR,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMa,aAAa,GAAG,MAAAA,CAAOF,SAAS,EAAEN,KAAK,KAAK;EACvD,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUH,KAAK;IAChC;EACF,CAAC;EACD,MAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACmB,MAAM,CAAC,GAAGlB,OAAO,IAAIe,SAAS,EAAE,EAAEL,MAAM,CAAC;EACtE,OAAOR,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,MAAMe,cAAc,GAAG;EACrBlB,aAAa;EACbI,gBAAgB;EAChBE,aAAa;EACbO,aAAa;EACbG;AACF,CAAC;AAED,eAAeE,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}