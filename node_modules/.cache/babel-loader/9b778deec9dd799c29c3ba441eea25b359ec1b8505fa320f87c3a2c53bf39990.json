{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add a response interceptor to handle errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/admin/login';\n  }\n  return Promise.reject(error);\n});\n\n// Register user\nconst register = async userData => {\n  try {\n    const response = await api.post('/auth/register', userData);\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data));\n    }\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed';\n  }\n};\n\n// Login user\nconst login = async (email, password) => {\n  try {\n    const response = await api.post('/auth/login', {\n      email,\n      password\n    });\n    if (response.data.token) {\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data));\n    }\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Login failed';\n  }\n};\n\n// Logout user\nconst logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n  window.location.href = '/admin/login';\n};\n\n// Get current user\nconst getCurrentUser = () => {\n  const user = localStorage.getItem('user');\n  return user ? JSON.parse(user) : null;\n};\n\n// Get user profile\nconst getProfile = async () => {\n  try {\n    const response = await api.get('/auth/me');\n    return response.data;\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to get profile';\n  }\n};\n\n// Verify token\nconst verifyToken = async () => {\n  try {\n    const response = await api.get('/auth/verify');\n    return response.data;\n  } catch (error) {\n    var _error$response5, _error$response5$data;\n    throw ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Token verification failed';\n  }\n};\n\n// Check if user is authenticated\nconst isAuthenticated = () => {\n  const token = localStorage.getItem('token');\n  const user = getCurrentUser();\n  return !!(token && user);\n};\n\n// Check if user is admin\nconst isAdmin = () => {\n  const user = getCurrentUser();\n  return user && user.role === 'admin';\n};\nconst authService = {\n  register,\n  login,\n  logout,\n  getCurrentUser,\n  getProfile,\n  verifyToken,\n  isAuthenticated,\n  isAdmin,\n  api\n};\nexport default authService;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","register","userData","post","data","setItem","JSON","stringify","_error$response2","_error$response2$data","message","login","email","password","_error$response3","_error$response3$data","logout","getCurrentUser","user","parse","getProfile","get","_error$response4","_error$response4$data","verifyToken","_error$response5","_error$response5$data","isAuthenticated","isAdmin","role","authService"],"sources":["X:/gradway/frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Add a request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add a response interceptor to handle errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/admin/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Register user\r\nconst register = async (userData) => {\r\n  try {\r\n    const response = await api.post('/auth/register', userData);\r\n    if (response.data.token) {\r\n      localStorage.setItem('token', response.data.token);\r\n      localStorage.setItem('user', JSON.stringify(response.data));\r\n    }\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data?.message || 'Registration failed';\r\n  }\r\n};\r\n\r\n// Login user\r\nconst login = async (email, password) => {\r\n  try {\r\n    const response = await api.post('/auth/login', { email, password });\r\n    if (response.data.token) {\r\n      localStorage.setItem('token', response.data.token);\r\n      localStorage.setItem('user', JSON.stringify(response.data));\r\n    }\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data?.message || 'Login failed';\r\n  }\r\n};\r\n\r\n// Logout user\r\nconst logout = () => {\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('user');\r\n  window.location.href = '/admin/login';\r\n};\r\n\r\n// Get current user\r\nconst getCurrentUser = () => {\r\n  const user = localStorage.getItem('user');\r\n  return user ? JSON.parse(user) : null;\r\n};\r\n\r\n// Get user profile\r\nconst getProfile = async () => {\r\n  try {\r\n    const response = await api.get('/auth/me');\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data?.message || 'Failed to get profile';\r\n  }\r\n};\r\n\r\n// Verify token\r\nconst verifyToken = async () => {\r\n  try {\r\n    const response = await api.get('/auth/verify');\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data?.message || 'Token verification failed';\r\n  }\r\n};\r\n\r\n// Check if user is authenticated\r\nconst isAuthenticated = () => {\r\n  const token = localStorage.getItem('token');\r\n  const user = getCurrentUser();\r\n  return !!(token && user);\r\n};\r\n\r\n// Check if user is admin\r\nconst isAdmin = () => {\r\n  const user = getCurrentUser();\r\n  return user && user.role === 'admin';\r\n};\r\n\r\nconst authService = {\r\n  register,\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n  getProfile,\r\n  verifyToken,\r\n  isAuthenticated,\r\n  isAdmin,\r\n  api\r\n};\r\n\r\nexport default authService; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}