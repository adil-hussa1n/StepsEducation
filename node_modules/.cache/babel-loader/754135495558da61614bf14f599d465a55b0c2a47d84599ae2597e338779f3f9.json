{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport const apiSlice = createApi({\n  reducerPath: 'api',\n  baseQuery: fetchBaseQuery({\n    baseUrl: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n    prepareHeaders: (headers, {\n      getState\n    }) => {\n      var _getState$auth;\n      const token = (_getState$auth = getState().auth) === null || _getState$auth === void 0 ? void 0 : _getState$auth.token;\n      if (token) {\n        headers.set('authorization', `Bearer ${token}`);\n      }\n      return headers;\n    }\n  }),\n  tagTypes: ['Content', 'Courses', 'Services', 'Testimonials', 'Contact'],\n  endpoints: builder => ({\n    // Content endpoints\n    getContents: builder.query({\n      query: () => '/public/contents',\n      providesTags: ['Content']\n    }),\n    updateContent: builder.mutation({\n      query: ({\n        id,\n        data\n      }) => ({\n        url: `/admin/contents/${id}`,\n        method: 'PUT',\n        body: data\n      }),\n      invalidatesTags: ['Content']\n    }),\n    // Course endpoints\n    getCourses: builder.query({\n      query: () => '/public/courses',\n      providesTags: ['Courses']\n    }),\n    createCourse: builder.mutation({\n      query: data => ({\n        url: '/admin/courses',\n        method: 'POST',\n        body: data\n      }),\n      invalidatesTags: ['Courses']\n    }),\n    updateCourse: builder.mutation({\n      query: ({\n        id,\n        data\n      }) => ({\n        url: `/admin/courses/${id}`,\n        method: 'PUT',\n        body: data\n      }),\n      invalidatesTags: ['Courses']\n    }),\n    deleteCourse: builder.mutation({\n      query: id => ({\n        url: `/admin/courses/${id}`,\n        method: 'DELETE'\n      }),\n      invalidatesTags: ['Courses']\n    }),\n    // Service endpoints\n    getServices: builder.query({\n      query: () => '/public/services',\n      providesTags: ['Services']\n    }),\n    createService: builder.mutation({\n      query: data => ({\n        url: '/admin/services',\n        method: 'POST',\n        body: data\n      }),\n      invalidatesTags: ['Services']\n    }),\n    updateService: builder.mutation({\n      query: ({\n        id,\n        data\n      }) => ({\n        url: `/admin/services/${id}`,\n        method: 'PUT',\n        body: data\n      }),\n      invalidatesTags: ['Services']\n    }),\n    deleteService: builder.mutation({\n      query: id => ({\n        url: `/admin/services/${id}`,\n        method: 'DELETE'\n      }),\n      invalidatesTags: ['Services']\n    }),\n    // Testimonial endpoints\n    getTestimonials: builder.query({\n      query: () => '/public/testimonials',\n      providesTags: ['Testimonials']\n    }),\n    createTestimonial: builder.mutation({\n      query: data => ({\n        url: '/admin/testimonials',\n        method: 'POST',\n        body: data\n      }),\n      invalidatesTags: ['Testimonials']\n    }),\n    updateTestimonial: builder.mutation({\n      query: ({\n        id,\n        data\n      }) => ({\n        url: `/admin/testimonials/${id}`,\n        method: 'PUT',\n        body: data\n      }),\n      invalidatesTags: ['Testimonials']\n    }),\n    deleteTestimonial: builder.mutation({\n      query: id => ({\n        url: `/admin/testimonials/${id}`,\n        method: 'DELETE'\n      }),\n      invalidatesTags: ['Testimonials']\n    }),\n    // Contact endpoints\n    submitContact: builder.mutation({\n      query: data => ({\n        url: '/public/contact',\n        method: 'POST',\n        body: data\n      }),\n      invalidatesTags: ['Contact']\n    })\n  })\n});\nexport const {\n  useGetContentsQuery,\n  useUpdateContentMutation,\n  useGetCoursesQuery,\n  useCreateCourseMutation,\n  useUpdateCourseMutation,\n  useDeleteCourseMutation,\n  useGetServicesQuery,\n  useCreateServiceMutation,\n  useUpdateServiceMutation,\n  useDeleteServiceMutation,\n  useGetTestimonialsQuery,\n  useCreateTestimonialMutation,\n  useUpdateTestimonialMutation,\n  useDeleteTestimonialMutation,\n  useSubmitContactMutation\n} = apiSlice;","map":{"version":3,"names":["createApi","fetchBaseQuery","apiSlice","reducerPath","baseQuery","baseUrl","process","env","REACT_APP_API_URL","prepareHeaders","headers","getState","_getState$auth","token","auth","set","tagTypes","endpoints","builder","getContents","query","providesTags","updateContent","mutation","id","data","url","method","body","invalidatesTags","getCourses","createCourse","updateCourse","deleteCourse","getServices","createService","updateService","deleteService","getTestimonials","createTestimonial","updateTestimonial","deleteTestimonial","submitContact","useGetContentsQuery","useUpdateContentMutation","useGetCoursesQuery","useCreateCourseMutation","useUpdateCourseMutation","useDeleteCourseMutation","useGetServicesQuery","useCreateServiceMutation","useUpdateServiceMutation","useDeleteServiceMutation","useGetTestimonialsQuery","useCreateTestimonialMutation","useUpdateTestimonialMutation","useDeleteTestimonialMutation","useSubmitContactMutation"],"sources":["X:/gradway/frontend/src/features/api/apiSlice.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const apiSlice = createApi({\n  reducerPath: 'api',\n  baseQuery: fetchBaseQuery({ \n    baseUrl: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n    prepareHeaders: (headers, { getState }) => {\n      const token = getState().auth?.token;\n      if (token) {\n        headers.set('authorization', `Bearer ${token}`);\n      }\n      return headers;\n    },\n  }),\n  tagTypes: ['Content', 'Courses', 'Services', 'Testimonials', 'Contact'],\n  endpoints: (builder) => ({\n    // Content endpoints\n    getContents: builder.query({\n      query: () => '/public/contents',\n      providesTags: ['Content'],\n    }),\n    updateContent: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/admin/contents/${id}`,\n        method: 'PUT',\n        body: data,\n      }),\n      invalidatesTags: ['Content'],\n    }),\n\n    // Course endpoints\n    getCourses: builder.query({\n      query: () => '/public/courses',\n      providesTags: ['Courses'],\n    }),\n    createCourse: builder.mutation({\n      query: (data) => ({\n        url: '/admin/courses',\n        method: 'POST',\n        body: data,\n      }),\n      invalidatesTags: ['Courses'],\n    }),\n    updateCourse: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/admin/courses/${id}`,\n        method: 'PUT',\n        body: data,\n      }),\n      invalidatesTags: ['Courses'],\n    }),\n    deleteCourse: builder.mutation({\n      query: (id) => ({\n        url: `/admin/courses/${id}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Courses'],\n    }),\n\n    // Service endpoints\n    getServices: builder.query({\n      query: () => '/public/services',\n      providesTags: ['Services'],\n    }),\n    createService: builder.mutation({\n      query: (data) => ({\n        url: '/admin/services',\n        method: 'POST',\n        body: data,\n      }),\n      invalidatesTags: ['Services'],\n    }),\n    updateService: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/admin/services/${id}`,\n        method: 'PUT',\n        body: data,\n      }),\n      invalidatesTags: ['Services'],\n    }),\n    deleteService: builder.mutation({\n      query: (id) => ({\n        url: `/admin/services/${id}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Services'],\n    }),\n\n    // Testimonial endpoints\n    getTestimonials: builder.query({\n      query: () => '/public/testimonials',\n      providesTags: ['Testimonials'],\n    }),\n    createTestimonial: builder.mutation({\n      query: (data) => ({\n        url: '/admin/testimonials',\n        method: 'POST',\n        body: data,\n      }),\n      invalidatesTags: ['Testimonials'],\n    }),\n    updateTestimonial: builder.mutation({\n      query: ({ id, data }) => ({\n        url: `/admin/testimonials/${id}`,\n        method: 'PUT',\n        body: data,\n      }),\n      invalidatesTags: ['Testimonials'],\n    }),\n    deleteTestimonial: builder.mutation({\n      query: (id) => ({\n        url: `/admin/testimonials/${id}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Testimonials'],\n    }),\n\n    // Contact endpoints\n    submitContact: builder.mutation({\n      query: (data) => ({\n        url: '/public/contact',\n        method: 'POST',\n        body: data,\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n  }),\n});\n\nexport const {\n  useGetContentsQuery,\n  useUpdateContentMutation,\n  useGetCoursesQuery,\n  useCreateCourseMutation,\n  useUpdateCourseMutation,\n  useDeleteCourseMutation,\n  useGetServicesQuery,\n  useCreateServiceMutation,\n  useUpdateServiceMutation,\n  useDeleteServiceMutation,\n  useGetTestimonialsQuery,\n  useCreateTestimonialMutation,\n  useUpdateTestimonialMutation,\n  useDeleteTestimonialMutation,\n  useSubmitContactMutation,\n} = apiSlice;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}