{"ast":null,"code":"// AdminServices.js\n// This file contains all the admin data services for the dashboard\nimport{toast}from'react-toastify';// ==================== CONTENT SERVICE ====================\n// Mock database for storing content\nlet contentDatabase=JSON.parse(localStorage.getItem('contentDatabase'))||[];// Save the content database to localStorage\nconst saveContentDatabase=()=>{localStorage.setItem('contentDatabase',JSON.stringify(contentDatabase));};// Initialize with some data if empty\nif(contentDatabase.length===0){contentDatabase=[{_id:'home-page-'+Date.now(),slug:'home',page:'home',title:'Welcome to GradWay',description:'Your path to academic success',template:'default',status:'published',isActive:true,sections:[{name:'hero',title:'Hero Section',order:0,fields:[{name:'title',type:'text',value:'Your Path to Academic Success',label:'Title'},{name:'subtitle',type:'text',value:'Expert guidance for international education',label:'Subtitle'},{name:'description',type:'text',value:'We help students achieve their academic dreams through personalized guidance and support.',label:'Description'}]}],meta:{description:'GradWay - Your path to academic success',keywords:['education','university','admissions']},createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}];saveContentDatabase();}// Content Service\nconst ContentService={// Get all content\ngetAllContent:async()=>{return contentDatabase;},// Get content by slug\ngetContentBySlug:async slug=>{const content=contentDatabase.find(item=>item.slug===slug);if(!content){throw new Error('Content not found');}return content;},// Create content\ncreateContent:async contentData=>{const newContent={_id:'content-'+Date.now(),...contentData,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};contentDatabase.push(newContent);saveContentDatabase();toast.success('Content created successfully');return newContent;},// Update content\nupdateContent:async(id,contentData)=>{const index=contentDatabase.findIndex(item=>item._id===id);if(index===-1){throw new Error('Content not found');}const updatedContent={...contentDatabase[index],...contentData,updatedAt:new Date().toISOString()};contentDatabase[index]=updatedContent;saveContentDatabase();toast.success('Content updated successfully');return updatedContent;},// Delete content\ndeleteContent:async id=>{const index=contentDatabase.findIndex(item=>item._id===id);if(index===-1){throw new Error('Content not found');}contentDatabase.splice(index,1);saveContentDatabase();toast.success('Content deleted successfully');return{success:true};},// Update content section\nupdateContentSection:async(id,sectionName,sectionData)=>{const content=contentDatabase.find(item=>item._id===id);if(!content){throw new Error('Content not found');}const sectionIndex=content.sections.findIndex(section=>section.name===sectionName);if(sectionIndex===-1){throw new Error('Section not found');}content.sections[sectionIndex]={...content.sections[sectionIndex],...sectionData};content.updatedAt=new Date().toISOString();saveContentDatabase();toast.success('Section updated successfully');return content;},// Add section item\naddSectionItem:async(id,sectionName,itemData)=>{const content=contentDatabase.find(item=>item._id===id);if(!content){throw new Error('Content not found');}const sectionIndex=content.sections.findIndex(section=>section.name===sectionName);if(sectionIndex===-1){throw new Error('Section not found');}const section=content.sections[sectionIndex];if(!section.isRepeatable){throw new Error('This section does not support multiple items');}const newItem={...itemData,order:section.items?section.items.length:0};if(!section.items){section.items=[];}section.items.push(newItem);content.updatedAt=new Date().toISOString();saveContentDatabase();toast.success('Item added successfully');return content;}};// ==================== COURSES SERVICE ====================\n// Mock database for storing courses\nlet coursesDatabase=JSON.parse(localStorage.getItem('coursesDatabase'))||[];// Save the courses database to localStorage\nconst saveCoursesDatabase=()=>{localStorage.setItem('coursesDatabase',JSON.stringify(coursesDatabase));};// Initialize with some data if empty\nif(coursesDatabase.length===0){coursesDatabase=[{_id:'course-1',title:'Bachelor of Computer Science',university:'University of Technology',description:'A comprehensive program covering programming, algorithms, and software engineering.',duration:'4 years',tuitionFee:'$20,000 per year',requirements:'High school diploma with strong math scores',image:'https://images.unsplash.com/photo-1517694712202-14dd9538aa97',featured:true,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},{_id:'course-2',title:'Master of Business Administration',university:'Global Business School',description:'Advanced business education focusing on leadership, strategy, and management.',duration:'2 years',tuitionFee:'$30,000 per year',requirements:'Bachelor degree with 2+ years work experience',image:'https://images.unsplash.com/photo-1454165804606-c3d57bc86b40',featured:true,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}];saveCoursesDatabase();}// Courses Service\nconst CoursesService={// Get all courses\ngetAllCourses:async()=>{return coursesDatabase;},// Get course by id\ngetCourseById:async id=>{const course=coursesDatabase.find(item=>item._id===id);if(!course){throw new Error('Course not found');}return course;},// Create course\ncreateCourse:async courseData=>{const newCourse={_id:'course-'+Date.now(),...courseData,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};coursesDatabase.push(newCourse);saveCoursesDatabase();toast.success('Course created successfully');return newCourse;},// Update course\nupdateCourse:async(id,courseData)=>{const index=coursesDatabase.findIndex(item=>item._id===id);if(index===-1){throw new Error('Course not found');}const updatedCourse={...coursesDatabase[index],...courseData,updatedAt:new Date().toISOString()};coursesDatabase[index]=updatedCourse;saveCoursesDatabase();toast.success('Course updated successfully');return updatedCourse;},// Delete course\ndeleteCourse:async id=>{const index=coursesDatabase.findIndex(item=>item._id===id);if(index===-1){throw new Error('Course not found');}coursesDatabase.splice(index,1);saveCoursesDatabase();toast.success('Course deleted successfully');return{success:true};}};// ==================== SERVICES SERVICE ====================\n// Mock database for storing services\nlet servicesDatabase=JSON.parse(localStorage.getItem('servicesDatabase'))||[];// Save the services database to localStorage\nconst saveServicesDatabase=()=>{localStorage.setItem('servicesDatabase',JSON.stringify(servicesDatabase));};// Initialize with some data if empty\nif(servicesDatabase.length===0){servicesDatabase=[{_id:'service-1',title:'University Admissions',description:'We help students navigate the complex university application process and secure admissions to top institutions worldwide.',icon:'graduation-cap',featured:true,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},{_id:'service-2',title:'Visa Assistance',description:'Our expert team provides comprehensive support for student visa applications, ensuring a smooth process.',icon:'passport',featured:true,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},{_id:'service-3',title:'Career Counseling',description:'Personalized guidance to help students choose the right career path based on their interests and strengths.',icon:'briefcase',featured:true,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}];saveServicesDatabase();}// Services Service\nconst ServicesService={// Get all services\ngetAllServices:async()=>{return servicesDatabase;},// Get service by id\ngetServiceById:async id=>{const service=servicesDatabase.find(item=>item._id===id);if(!service){throw new Error('Service not found');}return service;},// Create service\ncreateService:async serviceData=>{const newService={_id:'service-'+Date.now(),...serviceData,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};servicesDatabase.push(newService);saveServicesDatabase();toast.success('Service created successfully');return newService;},// Update service\nupdateService:async(id,serviceData)=>{const index=servicesDatabase.findIndex(item=>item._id===id);if(index===-1){throw new Error('Service not found');}const updatedService={...servicesDatabase[index],...serviceData,updatedAt:new Date().toISOString()};servicesDatabase[index]=updatedService;saveServicesDatabase();toast.success('Service updated successfully');return updatedService;},// Delete service\ndeleteService:async id=>{const index=servicesDatabase.findIndex(item=>item._id===id);if(index===-1){throw new Error('Service not found');}servicesDatabase.splice(index,1);saveServicesDatabase();toast.success('Service deleted successfully');return{success:true};}};// ==================== TESTIMONIALS SERVICE ====================\n// Mock database for storing testimonials\nlet testimonialsDatabase=JSON.parse(localStorage.getItem('testimonialsDatabase'))||[];// Save the testimonials database to localStorage\nconst saveTestimonialsDatabase=()=>{localStorage.setItem('testimonialsDatabase',JSON.stringify(testimonialsDatabase));};// Initialize with some data if empty\nif(testimonialsDatabase.length===0){testimonialsDatabase=[{_id:'testimonial-1',name:'John Smith',university:'Harvard University',text:'GradWay helped me get into my dream university. Their guidance throughout the application process was invaluable.',image:'https://randomuser.me/api/portraits/men/32.jpg',rating:5,featured:true,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},{_id:'testimonial-2',name:'Sarah Johnson',university:'Oxford University',text:\"I couldn't have navigated the complex visa process without GradWay's expert assistance. Highly recommended!\",image:'https://randomuser.me/api/portraits/women/44.jpg',rating:5,featured:true,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}];saveTestimonialsDatabase();}// Testimonials Service\nconst TestimonialsService={// Get all testimonials\ngetAllTestimonials:async()=>{return testimonialsDatabase;},// Get testimonial by id\ngetTestimonialById:async id=>{const testimonial=testimonialsDatabase.find(item=>item._id===id);if(!testimonial){throw new Error('Testimonial not found');}return testimonial;},// Create testimonial\ncreateTestimonial:async testimonialData=>{const newTestimonial={_id:'testimonial-'+Date.now(),...testimonialData,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};testimonialsDatabase.push(newTestimonial);saveTestimonialsDatabase();toast.success('Testimonial created successfully');return newTestimonial;},// Update testimonial\nupdateTestimonial:async(id,testimonialData)=>{const index=testimonialsDatabase.findIndex(item=>item._id===id);if(index===-1){throw new Error('Testimonial not found');}const updatedTestimonial={...testimonialsDatabase[index],...testimonialData,updatedAt:new Date().toISOString()};testimonialsDatabase[index]=updatedTestimonial;saveTestimonialsDatabase();toast.success('Testimonial updated successfully');return updatedTestimonial;},// Delete testimonial\ndeleteTestimonial:async id=>{const index=testimonialsDatabase.findIndex(item=>item._id===id);if(index===-1){throw new Error('Testimonial not found');}testimonialsDatabase.splice(index,1);saveTestimonialsDatabase();toast.success('Testimonial deleted successfully');return{success:true};}};// ==================== HERO SERVICE ====================\n// Mock database for storing hero sections\nlet heroDatabase=JSON.parse(localStorage.getItem('heroDatabase'))||null;// Save the hero database to localStorage\nconst saveHeroDatabase=()=>{localStorage.setItem('heroDatabase',JSON.stringify(heroDatabase));};// Initialize with some data if empty\nif(!heroDatabase){heroDatabase={_id:'hero-1',title:'Your Path to Academic Success',subtitle:'Expert guidance for international education',description:'We help students achieve their academic dreams through personalized guidance and support.',buttonText:'Get Started',buttonLink:'/contact',backgroundImage:'https://images.unsplash.com/photo-1523050854058-8df90110c9f1',createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};saveHeroDatabase();}// Hero Service\nconst HeroService={// Get hero section\ngetHero:async()=>{return heroDatabase;},// Update hero section\nupdateHero:async heroData=>{heroDatabase={...heroDatabase,...heroData,updatedAt:new Date().toISOString()};saveHeroDatabase();toast.success('Hero section updated successfully');return heroDatabase;}};// Export all services\nexport{ContentService,CoursesService,ServicesService,TestimonialsService,HeroService};","map":{"version":3,"names":["toast","contentDatabase","JSON","parse","localStorage","getItem","saveContentDatabase","setItem","stringify","length","_id","Date","now","slug","page","title","description","template","status","isActive","sections","name","order","fields","type","value","label","meta","keywords","createdAt","toISOString","updatedAt","ContentService","getAllContent","getContentBySlug","content","find","item","Error","createContent","contentData","newContent","push","success","updateContent","id","index","findIndex","updatedContent","deleteContent","splice","updateContentSection","sectionName","sectionData","sectionIndex","section","addSectionItem","itemData","isRepeatable","newItem","items","coursesDatabase","saveCoursesDatabase","university","duration","tuitionFee","requirements","image","featured","CoursesService","getAllCourses","getCourseById","course","createCourse","courseData","newCourse","updateCourse","updatedCourse","deleteCourse","servicesDatabase","saveServicesDatabase","icon","ServicesService","getAllServices","getServiceById","service","createService","serviceData","newService","updateService","updatedService","deleteService","testimonialsDatabase","saveTestimonialsDatabase","text","rating","TestimonialsService","getAllTestimonials","getTestimonialById","testimonial","createTestimonial","testimonialData","newTestimonial","updateTestimonial","updatedTestimonial","deleteTestimonial","heroDatabase","saveHeroDatabase","subtitle","buttonText","buttonLink","backgroundImage","HeroService","getHero","updateHero","heroData"],"sources":["X:/gradway/frontend/src/pages/admin/AdminServices.js"],"sourcesContent":["// AdminServices.js\n// This file contains all the admin data services for the dashboard\n\nimport { toast } from 'react-toastify';\n\n// ==================== CONTENT SERVICE ====================\n// Mock database for storing content\nlet contentDatabase = JSON.parse(localStorage.getItem('contentDatabase')) || [];\n\n// Save the content database to localStorage\nconst saveContentDatabase = () => {\n  localStorage.setItem('contentDatabase', JSON.stringify(contentDatabase));\n};\n\n// Initialize with some data if empty\nif (contentDatabase.length === 0) {\n  contentDatabase = [\n    {\n      _id: 'home-page-' + Date.now(),\n      slug: 'home',\n      page: 'home',\n      title: 'Welcome to GradWay',\n      description: 'Your path to academic success',\n      template: 'default',\n      status: 'published',\n      isActive: true,\n      sections: [\n        {\n          name: 'hero',\n          title: 'Hero Section',\n          order: 0,\n          fields: [\n            {\n              name: 'title',\n              type: 'text',\n              value: 'Your Path to Academic Success',\n              label: 'Title'\n            },\n            {\n              name: 'subtitle',\n              type: 'text',\n              value: 'Expert guidance for international education',\n              label: 'Subtitle'\n            },\n            {\n              name: 'description',\n              type: 'text',\n              value: 'We help students achieve their academic dreams through personalized guidance and support.',\n              label: 'Description'\n            }\n          ]\n        }\n      ],\n      meta: {\n        description: 'GradWay - Your path to academic success',\n        keywords: ['education', 'university', 'admissions']\n      },\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    }\n  ];\n  saveContentDatabase();\n}\n\n// Content Service\nconst ContentService = {\n  // Get all content\n  getAllContent: async () => {\n    return contentDatabase;\n  },\n\n  // Get content by slug\n  getContentBySlug: async (slug) => {\n    const content = contentDatabase.find(item => item.slug === slug);\n    if (!content) {\n      throw new Error('Content not found');\n    }\n    return content;\n  },\n\n  // Create content\n  createContent: async (contentData) => {\n    const newContent = {\n      _id: 'content-' + Date.now(),\n      ...contentData,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n    \n    contentDatabase.push(newContent);\n    saveContentDatabase();\n    toast.success('Content created successfully');\n    return newContent;\n  },\n\n  // Update content\n  updateContent: async (id, contentData) => {\n    const index = contentDatabase.findIndex(item => item._id === id);\n    if (index === -1) {\n      throw new Error('Content not found');\n    }\n    \n    const updatedContent = {\n      ...contentDatabase[index],\n      ...contentData,\n      updatedAt: new Date().toISOString()\n    };\n    \n    contentDatabase[index] = updatedContent;\n    saveContentDatabase();\n    toast.success('Content updated successfully');\n    return updatedContent;\n  },\n\n  // Delete content\n  deleteContent: async (id) => {\n    const index = contentDatabase.findIndex(item => item._id === id);\n    if (index === -1) {\n      throw new Error('Content not found');\n    }\n    \n    contentDatabase.splice(index, 1);\n    saveContentDatabase();\n    toast.success('Content deleted successfully');\n    return { success: true };\n  },\n\n  // Update content section\n  updateContentSection: async (id, sectionName, sectionData) => {\n    const content = contentDatabase.find(item => item._id === id);\n    if (!content) {\n      throw new Error('Content not found');\n    }\n    \n    const sectionIndex = content.sections.findIndex(section => section.name === sectionName);\n    if (sectionIndex === -1) {\n      throw new Error('Section not found');\n    }\n    \n    content.sections[sectionIndex] = {\n      ...content.sections[sectionIndex],\n      ...sectionData\n    };\n    \n    content.updatedAt = new Date().toISOString();\n    saveContentDatabase();\n    toast.success('Section updated successfully');\n    return content;\n  },\n\n  // Add section item\n  addSectionItem: async (id, sectionName, itemData) => {\n    const content = contentDatabase.find(item => item._id === id);\n    if (!content) {\n      throw new Error('Content not found');\n    }\n    \n    const sectionIndex = content.sections.findIndex(section => section.name === sectionName);\n    if (sectionIndex === -1) {\n      throw new Error('Section not found');\n    }\n    \n    const section = content.sections[sectionIndex];\n    if (!section.isRepeatable) {\n      throw new Error('This section does not support multiple items');\n    }\n    \n    const newItem = {\n      ...itemData,\n      order: section.items ? section.items.length : 0\n    };\n    \n    if (!section.items) {\n      section.items = [];\n    }\n    \n    section.items.push(newItem);\n    content.updatedAt = new Date().toISOString();\n    saveContentDatabase();\n    toast.success('Item added successfully');\n    return content;\n  }\n};\n\n// ==================== COURSES SERVICE ====================\n// Mock database for storing courses\nlet coursesDatabase = JSON.parse(localStorage.getItem('coursesDatabase')) || [];\n\n// Save the courses database to localStorage\nconst saveCoursesDatabase = () => {\n  localStorage.setItem('coursesDatabase', JSON.stringify(coursesDatabase));\n};\n\n// Initialize with some data if empty\nif (coursesDatabase.length === 0) {\n  coursesDatabase = [\n    {\n      _id: 'course-1',\n      title: 'Bachelor of Computer Science',\n      university: 'University of Technology',\n      description: 'A comprehensive program covering programming, algorithms, and software engineering.',\n      duration: '4 years',\n      tuitionFee: '$20,000 per year',\n      requirements: 'High school diploma with strong math scores',\n      image: 'https://images.unsplash.com/photo-1517694712202-14dd9538aa97',\n      featured: true,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    },\n    {\n      _id: 'course-2',\n      title: 'Master of Business Administration',\n      university: 'Global Business School',\n      description: 'Advanced business education focusing on leadership, strategy, and management.',\n      duration: '2 years',\n      tuitionFee: '$30,000 per year',\n      requirements: 'Bachelor degree with 2+ years work experience',\n      image: 'https://images.unsplash.com/photo-1454165804606-c3d57bc86b40',\n      featured: true,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    }\n  ];\n  saveCoursesDatabase();\n}\n\n// Courses Service\nconst CoursesService = {\n  // Get all courses\n  getAllCourses: async () => {\n    return coursesDatabase;\n  },\n\n  // Get course by id\n  getCourseById: async (id) => {\n    const course = coursesDatabase.find(item => item._id === id);\n    if (!course) {\n      throw new Error('Course not found');\n    }\n    return course;\n  },\n\n  // Create course\n  createCourse: async (courseData) => {\n    const newCourse = {\n      _id: 'course-' + Date.now(),\n      ...courseData,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n    \n    coursesDatabase.push(newCourse);\n    saveCoursesDatabase();\n    toast.success('Course created successfully');\n    return newCourse;\n  },\n\n  // Update course\n  updateCourse: async (id, courseData) => {\n    const index = coursesDatabase.findIndex(item => item._id === id);\n    if (index === -1) {\n      throw new Error('Course not found');\n    }\n    \n    const updatedCourse = {\n      ...coursesDatabase[index],\n      ...courseData,\n      updatedAt: new Date().toISOString()\n    };\n    \n    coursesDatabase[index] = updatedCourse;\n    saveCoursesDatabase();\n    toast.success('Course updated successfully');\n    return updatedCourse;\n  },\n\n  // Delete course\n  deleteCourse: async (id) => {\n    const index = coursesDatabase.findIndex(item => item._id === id);\n    if (index === -1) {\n      throw new Error('Course not found');\n    }\n    \n    coursesDatabase.splice(index, 1);\n    saveCoursesDatabase();\n    toast.success('Course deleted successfully');\n    return { success: true };\n  }\n};\n\n// ==================== SERVICES SERVICE ====================\n// Mock database for storing services\nlet servicesDatabase = JSON.parse(localStorage.getItem('servicesDatabase')) || [];\n\n// Save the services database to localStorage\nconst saveServicesDatabase = () => {\n  localStorage.setItem('servicesDatabase', JSON.stringify(servicesDatabase));\n};\n\n// Initialize with some data if empty\nif (servicesDatabase.length === 0) {\n  servicesDatabase = [\n    {\n      _id: 'service-1',\n      title: 'University Admissions',\n      description: 'We help students navigate the complex university application process and secure admissions to top institutions worldwide.',\n      icon: 'graduation-cap',\n      featured: true,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    },\n    {\n      _id: 'service-2',\n      title: 'Visa Assistance',\n      description: 'Our expert team provides comprehensive support for student visa applications, ensuring a smooth process.',\n      icon: 'passport',\n      featured: true,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    },\n    {\n      _id: 'service-3',\n      title: 'Career Counseling',\n      description: 'Personalized guidance to help students choose the right career path based on their interests and strengths.',\n      icon: 'briefcase',\n      featured: true,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    }\n  ];\n  saveServicesDatabase();\n}\n\n// Services Service\nconst ServicesService = {\n  // Get all services\n  getAllServices: async () => {\n    return servicesDatabase;\n  },\n\n  // Get service by id\n  getServiceById: async (id) => {\n    const service = servicesDatabase.find(item => item._id === id);\n    if (!service) {\n      throw new Error('Service not found');\n    }\n    return service;\n  },\n\n  // Create service\n  createService: async (serviceData) => {\n    const newService = {\n      _id: 'service-' + Date.now(),\n      ...serviceData,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n    \n    servicesDatabase.push(newService);\n    saveServicesDatabase();\n    toast.success('Service created successfully');\n    return newService;\n  },\n\n  // Update service\n  updateService: async (id, serviceData) => {\n    const index = servicesDatabase.findIndex(item => item._id === id);\n    if (index === -1) {\n      throw new Error('Service not found');\n    }\n    \n    const updatedService = {\n      ...servicesDatabase[index],\n      ...serviceData,\n      updatedAt: new Date().toISOString()\n    };\n    \n    servicesDatabase[index] = updatedService;\n    saveServicesDatabase();\n    toast.success('Service updated successfully');\n    return updatedService;\n  },\n\n  // Delete service\n  deleteService: async (id) => {\n    const index = servicesDatabase.findIndex(item => item._id === id);\n    if (index === -1) {\n      throw new Error('Service not found');\n    }\n    \n    servicesDatabase.splice(index, 1);\n    saveServicesDatabase();\n    toast.success('Service deleted successfully');\n    return { success: true };\n  }\n};\n\n// ==================== TESTIMONIALS SERVICE ====================\n// Mock database for storing testimonials\nlet testimonialsDatabase = JSON.parse(localStorage.getItem('testimonialsDatabase')) || [];\n\n// Save the testimonials database to localStorage\nconst saveTestimonialsDatabase = () => {\n  localStorage.setItem('testimonialsDatabase', JSON.stringify(testimonialsDatabase));\n};\n\n// Initialize with some data if empty\nif (testimonialsDatabase.length === 0) {\n  testimonialsDatabase = [\n    {\n      _id: 'testimonial-1',\n      name: 'John Smith',\n      university: 'Harvard University',\n      text: 'GradWay helped me get into my dream university. Their guidance throughout the application process was invaluable.',\n      image: 'https://randomuser.me/api/portraits/men/32.jpg',\n      rating: 5,\n      featured: true,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    },\n    {\n      _id: 'testimonial-2',\n      name: 'Sarah Johnson',\n      university: 'Oxford University',\n      text: \"I couldn't have navigated the complex visa process without GradWay's expert assistance. Highly recommended!\",\n      image: 'https://randomuser.me/api/portraits/women/44.jpg',\n      rating: 5,\n      featured: true,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    }\n  ];\n  saveTestimonialsDatabase();\n}\n\n// Testimonials Service\nconst TestimonialsService = {\n  // Get all testimonials\n  getAllTestimonials: async () => {\n    return testimonialsDatabase;\n  },\n\n  // Get testimonial by id\n  getTestimonialById: async (id) => {\n    const testimonial = testimonialsDatabase.find(item => item._id === id);\n    if (!testimonial) {\n      throw new Error('Testimonial not found');\n    }\n    return testimonial;\n  },\n\n  // Create testimonial\n  createTestimonial: async (testimonialData) => {\n    const newTestimonial = {\n      _id: 'testimonial-' + Date.now(),\n      ...testimonialData,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n    \n    testimonialsDatabase.push(newTestimonial);\n    saveTestimonialsDatabase();\n    toast.success('Testimonial created successfully');\n    return newTestimonial;\n  },\n\n  // Update testimonial\n  updateTestimonial: async (id, testimonialData) => {\n    const index = testimonialsDatabase.findIndex(item => item._id === id);\n    if (index === -1) {\n      throw new Error('Testimonial not found');\n    }\n    \n    const updatedTestimonial = {\n      ...testimonialsDatabase[index],\n      ...testimonialData,\n      updatedAt: new Date().toISOString()\n    };\n    \n    testimonialsDatabase[index] = updatedTestimonial;\n    saveTestimonialsDatabase();\n    toast.success('Testimonial updated successfully');\n    return updatedTestimonial;\n  },\n\n  // Delete testimonial\n  deleteTestimonial: async (id) => {\n    const index = testimonialsDatabase.findIndex(item => item._id === id);\n    if (index === -1) {\n      throw new Error('Testimonial not found');\n    }\n    \n    testimonialsDatabase.splice(index, 1);\n    saveTestimonialsDatabase();\n    toast.success('Testimonial deleted successfully');\n    return { success: true };\n  }\n};\n\n// ==================== HERO SERVICE ====================\n// Mock database for storing hero sections\nlet heroDatabase = JSON.parse(localStorage.getItem('heroDatabase')) || null;\n\n// Save the hero database to localStorage\nconst saveHeroDatabase = () => {\n  localStorage.setItem('heroDatabase', JSON.stringify(heroDatabase));\n};\n\n// Initialize with some data if empty\nif (!heroDatabase) {\n  heroDatabase = {\n    _id: 'hero-1',\n    title: 'Your Path to Academic Success',\n    subtitle: 'Expert guidance for international education',\n    description: 'We help students achieve their academic dreams through personalized guidance and support.',\n    buttonText: 'Get Started',\n    buttonLink: '/contact',\n    backgroundImage: 'https://images.unsplash.com/photo-1523050854058-8df90110c9f1',\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString()\n  };\n  saveHeroDatabase();\n}\n\n// Hero Service\nconst HeroService = {\n  // Get hero section\n  getHero: async () => {\n    return heroDatabase;\n  },\n\n  // Update hero section\n  updateHero: async (heroData) => {\n    heroDatabase = {\n      ...heroDatabase,\n      ...heroData,\n      updatedAt: new Date().toISOString()\n    };\n    \n    saveHeroDatabase();\n    toast.success('Hero section updated successfully');\n    return heroDatabase;\n  }\n};\n\n// Export all services\nexport {\n  ContentService,\n  CoursesService,\n  ServicesService,\n  TestimonialsService,\n  HeroService\n};\n"],"mappings":"AAAA;AACA;AAEA,OAASA,KAAK,KAAQ,gBAAgB,CAEtC;AACA;AACA,GAAI,CAAAC,eAAe,CAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,EAAI,EAAE,CAE/E;AACA,KAAM,CAAAC,mBAAmB,CAAGA,CAAA,GAAM,CAChCF,YAAY,CAACG,OAAO,CAAC,iBAAiB,CAAEL,IAAI,CAACM,SAAS,CAACP,eAAe,CAAC,CAAC,CAC1E,CAAC,CAED;AACA,GAAIA,eAAe,CAACQ,MAAM,GAAK,CAAC,CAAE,CAChCR,eAAe,CAAG,CAChB,CACES,GAAG,CAAE,YAAY,CAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAC9BC,IAAI,CAAE,MAAM,CACZC,IAAI,CAAE,MAAM,CACZC,KAAK,CAAE,oBAAoB,CAC3BC,WAAW,CAAE,+BAA+B,CAC5CC,QAAQ,CAAE,SAAS,CACnBC,MAAM,CAAE,WAAW,CACnBC,QAAQ,CAAE,IAAI,CACdC,QAAQ,CAAE,CACR,CACEC,IAAI,CAAE,MAAM,CACZN,KAAK,CAAE,cAAc,CACrBO,KAAK,CAAE,CAAC,CACRC,MAAM,CAAE,CACN,CACEF,IAAI,CAAE,OAAO,CACbG,IAAI,CAAE,MAAM,CACZC,KAAK,CAAE,+BAA+B,CACtCC,KAAK,CAAE,OACT,CAAC,CACD,CACEL,IAAI,CAAE,UAAU,CAChBG,IAAI,CAAE,MAAM,CACZC,KAAK,CAAE,6CAA6C,CACpDC,KAAK,CAAE,UACT,CAAC,CACD,CACEL,IAAI,CAAE,aAAa,CACnBG,IAAI,CAAE,MAAM,CACZC,KAAK,CAAE,2FAA2F,CAClGC,KAAK,CAAE,aACT,CAAC,CAEL,CAAC,CACF,CACDC,IAAI,CAAE,CACJX,WAAW,CAAE,yCAAyC,CACtDY,QAAQ,CAAE,CAAC,WAAW,CAAE,YAAY,CAAE,YAAY,CACpD,CAAC,CACDC,SAAS,CAAE,GAAI,CAAAlB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CAAC,CACnCC,SAAS,CAAE,GAAI,CAAApB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CACpC,CAAC,CACF,CACDxB,mBAAmB,CAAC,CAAC,CACvB,CAEA;AACA,KAAM,CAAA0B,cAAc,CAAG,CACrB;AACAC,aAAa,CAAE,KAAAA,CAAA,GAAY,CACzB,MAAO,CAAAhC,eAAe,CACxB,CAAC,CAED;AACAiC,gBAAgB,CAAE,KAAO,CAAArB,IAAI,EAAK,CAChC,KAAM,CAAAsB,OAAO,CAAGlC,eAAe,CAACmC,IAAI,CAACC,IAAI,EAAIA,IAAI,CAACxB,IAAI,GAAKA,IAAI,CAAC,CAChE,GAAI,CAACsB,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAG,KAAK,CAAC,mBAAmB,CAAC,CACtC,CACA,MAAO,CAAAH,OAAO,CAChB,CAAC,CAED;AACAI,aAAa,CAAE,KAAO,CAAAC,WAAW,EAAK,CACpC,KAAM,CAAAC,UAAU,CAAG,CACjB/B,GAAG,CAAE,UAAU,CAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAC5B,GAAG4B,WAAW,CACdX,SAAS,CAAE,GAAI,CAAAlB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CAAC,CACnCC,SAAS,CAAE,GAAI,CAAApB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CACpC,CAAC,CAED7B,eAAe,CAACyC,IAAI,CAACD,UAAU,CAAC,CAChCnC,mBAAmB,CAAC,CAAC,CACrBN,KAAK,CAAC2C,OAAO,CAAC,8BAA8B,CAAC,CAC7C,MAAO,CAAAF,UAAU,CACnB,CAAC,CAED;AACAG,aAAa,CAAE,KAAAA,CAAOC,EAAE,CAAEL,WAAW,GAAK,CACxC,KAAM,CAAAM,KAAK,CAAG7C,eAAe,CAAC8C,SAAS,CAACV,IAAI,EAAIA,IAAI,CAAC3B,GAAG,GAAKmC,EAAE,CAAC,CAChE,GAAIC,KAAK,GAAK,CAAC,CAAC,CAAE,CAChB,KAAM,IAAI,CAAAR,KAAK,CAAC,mBAAmB,CAAC,CACtC,CAEA,KAAM,CAAAU,cAAc,CAAG,CACrB,GAAG/C,eAAe,CAAC6C,KAAK,CAAC,CACzB,GAAGN,WAAW,CACdT,SAAS,CAAE,GAAI,CAAApB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CACpC,CAAC,CAED7B,eAAe,CAAC6C,KAAK,CAAC,CAAGE,cAAc,CACvC1C,mBAAmB,CAAC,CAAC,CACrBN,KAAK,CAAC2C,OAAO,CAAC,8BAA8B,CAAC,CAC7C,MAAO,CAAAK,cAAc,CACvB,CAAC,CAED;AACAC,aAAa,CAAE,KAAO,CAAAJ,EAAE,EAAK,CAC3B,KAAM,CAAAC,KAAK,CAAG7C,eAAe,CAAC8C,SAAS,CAACV,IAAI,EAAIA,IAAI,CAAC3B,GAAG,GAAKmC,EAAE,CAAC,CAChE,GAAIC,KAAK,GAAK,CAAC,CAAC,CAAE,CAChB,KAAM,IAAI,CAAAR,KAAK,CAAC,mBAAmB,CAAC,CACtC,CAEArC,eAAe,CAACiD,MAAM,CAACJ,KAAK,CAAE,CAAC,CAAC,CAChCxC,mBAAmB,CAAC,CAAC,CACrBN,KAAK,CAAC2C,OAAO,CAAC,8BAA8B,CAAC,CAC7C,MAAO,CAAEA,OAAO,CAAE,IAAK,CAAC,CAC1B,CAAC,CAED;AACAQ,oBAAoB,CAAE,KAAAA,CAAON,EAAE,CAAEO,WAAW,CAAEC,WAAW,GAAK,CAC5D,KAAM,CAAAlB,OAAO,CAAGlC,eAAe,CAACmC,IAAI,CAACC,IAAI,EAAIA,IAAI,CAAC3B,GAAG,GAAKmC,EAAE,CAAC,CAC7D,GAAI,CAACV,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAG,KAAK,CAAC,mBAAmB,CAAC,CACtC,CAEA,KAAM,CAAAgB,YAAY,CAAGnB,OAAO,CAACf,QAAQ,CAAC2B,SAAS,CAACQ,OAAO,EAAIA,OAAO,CAAClC,IAAI,GAAK+B,WAAW,CAAC,CACxF,GAAIE,YAAY,GAAK,CAAC,CAAC,CAAE,CACvB,KAAM,IAAI,CAAAhB,KAAK,CAAC,mBAAmB,CAAC,CACtC,CAEAH,OAAO,CAACf,QAAQ,CAACkC,YAAY,CAAC,CAAG,CAC/B,GAAGnB,OAAO,CAACf,QAAQ,CAACkC,YAAY,CAAC,CACjC,GAAGD,WACL,CAAC,CAEDlB,OAAO,CAACJ,SAAS,CAAG,GAAI,CAAApB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CAAC,CAC5CxB,mBAAmB,CAAC,CAAC,CACrBN,KAAK,CAAC2C,OAAO,CAAC,8BAA8B,CAAC,CAC7C,MAAO,CAAAR,OAAO,CAChB,CAAC,CAED;AACAqB,cAAc,CAAE,KAAAA,CAAOX,EAAE,CAAEO,WAAW,CAAEK,QAAQ,GAAK,CACnD,KAAM,CAAAtB,OAAO,CAAGlC,eAAe,CAACmC,IAAI,CAACC,IAAI,EAAIA,IAAI,CAAC3B,GAAG,GAAKmC,EAAE,CAAC,CAC7D,GAAI,CAACV,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAG,KAAK,CAAC,mBAAmB,CAAC,CACtC,CAEA,KAAM,CAAAgB,YAAY,CAAGnB,OAAO,CAACf,QAAQ,CAAC2B,SAAS,CAACQ,OAAO,EAAIA,OAAO,CAAClC,IAAI,GAAK+B,WAAW,CAAC,CACxF,GAAIE,YAAY,GAAK,CAAC,CAAC,CAAE,CACvB,KAAM,IAAI,CAAAhB,KAAK,CAAC,mBAAmB,CAAC,CACtC,CAEA,KAAM,CAAAiB,OAAO,CAAGpB,OAAO,CAACf,QAAQ,CAACkC,YAAY,CAAC,CAC9C,GAAI,CAACC,OAAO,CAACG,YAAY,CAAE,CACzB,KAAM,IAAI,CAAApB,KAAK,CAAC,8CAA8C,CAAC,CACjE,CAEA,KAAM,CAAAqB,OAAO,CAAG,CACd,GAAGF,QAAQ,CACXnC,KAAK,CAAEiC,OAAO,CAACK,KAAK,CAAGL,OAAO,CAACK,KAAK,CAACnD,MAAM,CAAG,CAChD,CAAC,CAED,GAAI,CAAC8C,OAAO,CAACK,KAAK,CAAE,CAClBL,OAAO,CAACK,KAAK,CAAG,EAAE,CACpB,CAEAL,OAAO,CAACK,KAAK,CAAClB,IAAI,CAACiB,OAAO,CAAC,CAC3BxB,OAAO,CAACJ,SAAS,CAAG,GAAI,CAAApB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CAAC,CAC5CxB,mBAAmB,CAAC,CAAC,CACrBN,KAAK,CAAC2C,OAAO,CAAC,yBAAyB,CAAC,CACxC,MAAO,CAAAR,OAAO,CAChB,CACF,CAAC,CAED;AACA;AACA,GAAI,CAAA0B,eAAe,CAAG3D,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,EAAI,EAAE,CAE/E;AACA,KAAM,CAAAyD,mBAAmB,CAAGA,CAAA,GAAM,CAChC1D,YAAY,CAACG,OAAO,CAAC,iBAAiB,CAAEL,IAAI,CAACM,SAAS,CAACqD,eAAe,CAAC,CAAC,CAC1E,CAAC,CAED;AACA,GAAIA,eAAe,CAACpD,MAAM,GAAK,CAAC,CAAE,CAChCoD,eAAe,CAAG,CAChB,CACEnD,GAAG,CAAE,UAAU,CACfK,KAAK,CAAE,8BAA8B,CACrCgD,UAAU,CAAE,0BAA0B,CACtC/C,WAAW,CAAE,qFAAqF,CAClGgD,QAAQ,CAAE,SAAS,CACnBC,UAAU,CAAE,kBAAkB,CAC9BC,YAAY,CAAE,6CAA6C,CAC3DC,KAAK,CAAE,8DAA8D,CACrEC,QAAQ,CAAE,IAAI,CACdvC,SAAS,CAAE,GAAI,CAAAlB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CAAC,CACnCC,SAAS,CAAE,GAAI,CAAApB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CACpC,CAAC,CACD,CACEpB,GAAG,CAAE,UAAU,CACfK,KAAK,CAAE,mCAAmC,CAC1CgD,UAAU,CAAE,wBAAwB,CACpC/C,WAAW,CAAE,+EAA+E,CAC5FgD,QAAQ,CAAE,SAAS,CACnBC,UAAU,CAAE,kBAAkB,CAC9BC,YAAY,CAAE,+CAA+C,CAC7DC,KAAK,CAAE,8DAA8D,CACrEC,QAAQ,CAAE,IAAI,CACdvC,SAAS,CAAE,GAAI,CAAAlB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CAAC,CACnCC,SAAS,CAAE,GAAI,CAAApB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CACpC,CAAC,CACF,CACDgC,mBAAmB,CAAC,CAAC,CACvB,CAEA;AACA,KAAM,CAAAO,cAAc,CAAG,CACrB;AACAC,aAAa,CAAE,KAAAA,CAAA,GAAY,CACzB,MAAO,CAAAT,eAAe,CACxB,CAAC,CAED;AACAU,aAAa,CAAE,KAAO,CAAA1B,EAAE,EAAK,CAC3B,KAAM,CAAA2B,MAAM,CAAGX,eAAe,CAACzB,IAAI,CAACC,IAAI,EAAIA,IAAI,CAAC3B,GAAG,GAAKmC,EAAE,CAAC,CAC5D,GAAI,CAAC2B,MAAM,CAAE,CACX,KAAM,IAAI,CAAAlC,KAAK,CAAC,kBAAkB,CAAC,CACrC,CACA,MAAO,CAAAkC,MAAM,CACf,CAAC,CAED;AACAC,YAAY,CAAE,KAAO,CAAAC,UAAU,EAAK,CAClC,KAAM,CAAAC,SAAS,CAAG,CAChBjE,GAAG,CAAE,SAAS,CAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAC3B,GAAG8D,UAAU,CACb7C,SAAS,CAAE,GAAI,CAAAlB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CAAC,CACnCC,SAAS,CAAE,GAAI,CAAApB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CACpC,CAAC,CAED+B,eAAe,CAACnB,IAAI,CAACiC,SAAS,CAAC,CAC/Bb,mBAAmB,CAAC,CAAC,CACrB9D,KAAK,CAAC2C,OAAO,CAAC,6BAA6B,CAAC,CAC5C,MAAO,CAAAgC,SAAS,CAClB,CAAC,CAED;AACAC,YAAY,CAAE,KAAAA,CAAO/B,EAAE,CAAE6B,UAAU,GAAK,CACtC,KAAM,CAAA5B,KAAK,CAAGe,eAAe,CAACd,SAAS,CAACV,IAAI,EAAIA,IAAI,CAAC3B,GAAG,GAAKmC,EAAE,CAAC,CAChE,GAAIC,KAAK,GAAK,CAAC,CAAC,CAAE,CAChB,KAAM,IAAI,CAAAR,KAAK,CAAC,kBAAkB,CAAC,CACrC,CAEA,KAAM,CAAAuC,aAAa,CAAG,CACpB,GAAGhB,eAAe,CAACf,KAAK,CAAC,CACzB,GAAG4B,UAAU,CACb3C,SAAS,CAAE,GAAI,CAAApB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CACpC,CAAC,CAED+B,eAAe,CAACf,KAAK,CAAC,CAAG+B,aAAa,CACtCf,mBAAmB,CAAC,CAAC,CACrB9D,KAAK,CAAC2C,OAAO,CAAC,6BAA6B,CAAC,CAC5C,MAAO,CAAAkC,aAAa,CACtB,CAAC,CAED;AACAC,YAAY,CAAE,KAAO,CAAAjC,EAAE,EAAK,CAC1B,KAAM,CAAAC,KAAK,CAAGe,eAAe,CAACd,SAAS,CAACV,IAAI,EAAIA,IAAI,CAAC3B,GAAG,GAAKmC,EAAE,CAAC,CAChE,GAAIC,KAAK,GAAK,CAAC,CAAC,CAAE,CAChB,KAAM,IAAI,CAAAR,KAAK,CAAC,kBAAkB,CAAC,CACrC,CAEAuB,eAAe,CAACX,MAAM,CAACJ,KAAK,CAAE,CAAC,CAAC,CAChCgB,mBAAmB,CAAC,CAAC,CACrB9D,KAAK,CAAC2C,OAAO,CAAC,6BAA6B,CAAC,CAC5C,MAAO,CAAEA,OAAO,CAAE,IAAK,CAAC,CAC1B,CACF,CAAC,CAED;AACA;AACA,GAAI,CAAAoC,gBAAgB,CAAG7E,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC,CAAC,EAAI,EAAE,CAEjF;AACA,KAAM,CAAA2E,oBAAoB,CAAGA,CAAA,GAAM,CACjC5E,YAAY,CAACG,OAAO,CAAC,kBAAkB,CAAEL,IAAI,CAACM,SAAS,CAACuE,gBAAgB,CAAC,CAAC,CAC5E,CAAC,CAED;AACA,GAAIA,gBAAgB,CAACtE,MAAM,GAAK,CAAC,CAAE,CACjCsE,gBAAgB,CAAG,CACjB,CACErE,GAAG,CAAE,WAAW,CAChBK,KAAK,CAAE,uBAAuB,CAC9BC,WAAW,CAAE,2HAA2H,CACxIiE,IAAI,CAAE,gBAAgB,CACtBb,QAAQ,CAAE,IAAI,CACdvC,SAAS,CAAE,GAAI,CAAAlB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CAAC,CACnCC,SAAS,CAAE,GAAI,CAAApB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CACpC,CAAC,CACD,CACEpB,GAAG,CAAE,WAAW,CAChBK,KAAK,CAAE,iBAAiB,CACxBC,WAAW,CAAE,0GAA0G,CACvHiE,IAAI,CAAE,UAAU,CAChBb,QAAQ,CAAE,IAAI,CACdvC,SAAS,CAAE,GAAI,CAAAlB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CAAC,CACnCC,SAAS,CAAE,GAAI,CAAApB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CACpC,CAAC,CACD,CACEpB,GAAG,CAAE,WAAW,CAChBK,KAAK,CAAE,mBAAmB,CAC1BC,WAAW,CAAE,6GAA6G,CAC1HiE,IAAI,CAAE,WAAW,CACjBb,QAAQ,CAAE,IAAI,CACdvC,SAAS,CAAE,GAAI,CAAAlB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CAAC,CACnCC,SAAS,CAAE,GAAI,CAAApB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CACpC,CAAC,CACF,CACDkD,oBAAoB,CAAC,CAAC,CACxB,CAEA;AACA,KAAM,CAAAE,eAAe,CAAG,CACtB;AACAC,cAAc,CAAE,KAAAA,CAAA,GAAY,CAC1B,MAAO,CAAAJ,gBAAgB,CACzB,CAAC,CAED;AACAK,cAAc,CAAE,KAAO,CAAAvC,EAAE,EAAK,CAC5B,KAAM,CAAAwC,OAAO,CAAGN,gBAAgB,CAAC3C,IAAI,CAACC,IAAI,EAAIA,IAAI,CAAC3B,GAAG,GAAKmC,EAAE,CAAC,CAC9D,GAAI,CAACwC,OAAO,CAAE,CACZ,KAAM,IAAI,CAAA/C,KAAK,CAAC,mBAAmB,CAAC,CACtC,CACA,MAAO,CAAA+C,OAAO,CAChB,CAAC,CAED;AACAC,aAAa,CAAE,KAAO,CAAAC,WAAW,EAAK,CACpC,KAAM,CAAAC,UAAU,CAAG,CACjB9E,GAAG,CAAE,UAAU,CAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAC5B,GAAG2E,WAAW,CACd1D,SAAS,CAAE,GAAI,CAAAlB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CAAC,CACnCC,SAAS,CAAE,GAAI,CAAApB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CACpC,CAAC,CAEDiD,gBAAgB,CAACrC,IAAI,CAAC8C,UAAU,CAAC,CACjCR,oBAAoB,CAAC,CAAC,CACtBhF,KAAK,CAAC2C,OAAO,CAAC,8BAA8B,CAAC,CAC7C,MAAO,CAAA6C,UAAU,CACnB,CAAC,CAED;AACAC,aAAa,CAAE,KAAAA,CAAO5C,EAAE,CAAE0C,WAAW,GAAK,CACxC,KAAM,CAAAzC,KAAK,CAAGiC,gBAAgB,CAAChC,SAAS,CAACV,IAAI,EAAIA,IAAI,CAAC3B,GAAG,GAAKmC,EAAE,CAAC,CACjE,GAAIC,KAAK,GAAK,CAAC,CAAC,CAAE,CAChB,KAAM,IAAI,CAAAR,KAAK,CAAC,mBAAmB,CAAC,CACtC,CAEA,KAAM,CAAAoD,cAAc,CAAG,CACrB,GAAGX,gBAAgB,CAACjC,KAAK,CAAC,CAC1B,GAAGyC,WAAW,CACdxD,SAAS,CAAE,GAAI,CAAApB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CACpC,CAAC,CAEDiD,gBAAgB,CAACjC,KAAK,CAAC,CAAG4C,cAAc,CACxCV,oBAAoB,CAAC,CAAC,CACtBhF,KAAK,CAAC2C,OAAO,CAAC,8BAA8B,CAAC,CAC7C,MAAO,CAAA+C,cAAc,CACvB,CAAC,CAED;AACAC,aAAa,CAAE,KAAO,CAAA9C,EAAE,EAAK,CAC3B,KAAM,CAAAC,KAAK,CAAGiC,gBAAgB,CAAChC,SAAS,CAACV,IAAI,EAAIA,IAAI,CAAC3B,GAAG,GAAKmC,EAAE,CAAC,CACjE,GAAIC,KAAK,GAAK,CAAC,CAAC,CAAE,CAChB,KAAM,IAAI,CAAAR,KAAK,CAAC,mBAAmB,CAAC,CACtC,CAEAyC,gBAAgB,CAAC7B,MAAM,CAACJ,KAAK,CAAE,CAAC,CAAC,CACjCkC,oBAAoB,CAAC,CAAC,CACtBhF,KAAK,CAAC2C,OAAO,CAAC,8BAA8B,CAAC,CAC7C,MAAO,CAAEA,OAAO,CAAE,IAAK,CAAC,CAC1B,CACF,CAAC,CAED;AACA;AACA,GAAI,CAAAiD,oBAAoB,CAAG1F,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,sBAAsB,CAAC,CAAC,EAAI,EAAE,CAEzF;AACA,KAAM,CAAAwF,wBAAwB,CAAGA,CAAA,GAAM,CACrCzF,YAAY,CAACG,OAAO,CAAC,sBAAsB,CAAEL,IAAI,CAACM,SAAS,CAACoF,oBAAoB,CAAC,CAAC,CACpF,CAAC,CAED;AACA,GAAIA,oBAAoB,CAACnF,MAAM,GAAK,CAAC,CAAE,CACrCmF,oBAAoB,CAAG,CACrB,CACElF,GAAG,CAAE,eAAe,CACpBW,IAAI,CAAE,YAAY,CAClB0C,UAAU,CAAE,oBAAoB,CAChC+B,IAAI,CAAE,mHAAmH,CACzH3B,KAAK,CAAE,gDAAgD,CACvD4B,MAAM,CAAE,CAAC,CACT3B,QAAQ,CAAE,IAAI,CACdvC,SAAS,CAAE,GAAI,CAAAlB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CAAC,CACnCC,SAAS,CAAE,GAAI,CAAApB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CACpC,CAAC,CACD,CACEpB,GAAG,CAAE,eAAe,CACpBW,IAAI,CAAE,eAAe,CACrB0C,UAAU,CAAE,mBAAmB,CAC/B+B,IAAI,CAAE,6GAA6G,CACnH3B,KAAK,CAAE,kDAAkD,CACzD4B,MAAM,CAAE,CAAC,CACT3B,QAAQ,CAAE,IAAI,CACdvC,SAAS,CAAE,GAAI,CAAAlB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CAAC,CACnCC,SAAS,CAAE,GAAI,CAAApB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CACpC,CAAC,CACF,CACD+D,wBAAwB,CAAC,CAAC,CAC5B,CAEA;AACA,KAAM,CAAAG,mBAAmB,CAAG,CAC1B;AACAC,kBAAkB,CAAE,KAAAA,CAAA,GAAY,CAC9B,MAAO,CAAAL,oBAAoB,CAC7B,CAAC,CAED;AACAM,kBAAkB,CAAE,KAAO,CAAArD,EAAE,EAAK,CAChC,KAAM,CAAAsD,WAAW,CAAGP,oBAAoB,CAACxD,IAAI,CAACC,IAAI,EAAIA,IAAI,CAAC3B,GAAG,GAAKmC,EAAE,CAAC,CACtE,GAAI,CAACsD,WAAW,CAAE,CAChB,KAAM,IAAI,CAAA7D,KAAK,CAAC,uBAAuB,CAAC,CAC1C,CACA,MAAO,CAAA6D,WAAW,CACpB,CAAC,CAED;AACAC,iBAAiB,CAAE,KAAO,CAAAC,eAAe,EAAK,CAC5C,KAAM,CAAAC,cAAc,CAAG,CACrB5F,GAAG,CAAE,cAAc,CAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAChC,GAAGyF,eAAe,CAClBxE,SAAS,CAAE,GAAI,CAAAlB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CAAC,CACnCC,SAAS,CAAE,GAAI,CAAApB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CACpC,CAAC,CAED8D,oBAAoB,CAAClD,IAAI,CAAC4D,cAAc,CAAC,CACzCT,wBAAwB,CAAC,CAAC,CAC1B7F,KAAK,CAAC2C,OAAO,CAAC,kCAAkC,CAAC,CACjD,MAAO,CAAA2D,cAAc,CACvB,CAAC,CAED;AACAC,iBAAiB,CAAE,KAAAA,CAAO1D,EAAE,CAAEwD,eAAe,GAAK,CAChD,KAAM,CAAAvD,KAAK,CAAG8C,oBAAoB,CAAC7C,SAAS,CAACV,IAAI,EAAIA,IAAI,CAAC3B,GAAG,GAAKmC,EAAE,CAAC,CACrE,GAAIC,KAAK,GAAK,CAAC,CAAC,CAAE,CAChB,KAAM,IAAI,CAAAR,KAAK,CAAC,uBAAuB,CAAC,CAC1C,CAEA,KAAM,CAAAkE,kBAAkB,CAAG,CACzB,GAAGZ,oBAAoB,CAAC9C,KAAK,CAAC,CAC9B,GAAGuD,eAAe,CAClBtE,SAAS,CAAE,GAAI,CAAApB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CACpC,CAAC,CAED8D,oBAAoB,CAAC9C,KAAK,CAAC,CAAG0D,kBAAkB,CAChDX,wBAAwB,CAAC,CAAC,CAC1B7F,KAAK,CAAC2C,OAAO,CAAC,kCAAkC,CAAC,CACjD,MAAO,CAAA6D,kBAAkB,CAC3B,CAAC,CAED;AACAC,iBAAiB,CAAE,KAAO,CAAA5D,EAAE,EAAK,CAC/B,KAAM,CAAAC,KAAK,CAAG8C,oBAAoB,CAAC7C,SAAS,CAACV,IAAI,EAAIA,IAAI,CAAC3B,GAAG,GAAKmC,EAAE,CAAC,CACrE,GAAIC,KAAK,GAAK,CAAC,CAAC,CAAE,CAChB,KAAM,IAAI,CAAAR,KAAK,CAAC,uBAAuB,CAAC,CAC1C,CAEAsD,oBAAoB,CAAC1C,MAAM,CAACJ,KAAK,CAAE,CAAC,CAAC,CACrC+C,wBAAwB,CAAC,CAAC,CAC1B7F,KAAK,CAAC2C,OAAO,CAAC,kCAAkC,CAAC,CACjD,MAAO,CAAEA,OAAO,CAAE,IAAK,CAAC,CAC1B,CACF,CAAC,CAED;AACA;AACA,GAAI,CAAA+D,YAAY,CAAGxG,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC,EAAI,IAAI,CAE3E;AACA,KAAM,CAAAsG,gBAAgB,CAAGA,CAAA,GAAM,CAC7BvG,YAAY,CAACG,OAAO,CAAC,cAAc,CAAEL,IAAI,CAACM,SAAS,CAACkG,YAAY,CAAC,CAAC,CACpE,CAAC,CAED;AACA,GAAI,CAACA,YAAY,CAAE,CACjBA,YAAY,CAAG,CACbhG,GAAG,CAAE,QAAQ,CACbK,KAAK,CAAE,+BAA+B,CACtC6F,QAAQ,CAAE,6CAA6C,CACvD5F,WAAW,CAAE,2FAA2F,CACxG6F,UAAU,CAAE,aAAa,CACzBC,UAAU,CAAE,UAAU,CACtBC,eAAe,CAAE,8DAA8D,CAC/ElF,SAAS,CAAE,GAAI,CAAAlB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CAAC,CACnCC,SAAS,CAAE,GAAI,CAAApB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CACpC,CAAC,CACD6E,gBAAgB,CAAC,CAAC,CACpB,CAEA;AACA,KAAM,CAAAK,WAAW,CAAG,CAClB;AACAC,OAAO,CAAE,KAAAA,CAAA,GAAY,CACnB,MAAO,CAAAP,YAAY,CACrB,CAAC,CAED;AACAQ,UAAU,CAAE,KAAO,CAAAC,QAAQ,EAAK,CAC9BT,YAAY,CAAG,CACb,GAAGA,YAAY,CACf,GAAGS,QAAQ,CACXpF,SAAS,CAAE,GAAI,CAAApB,IAAI,CAAC,CAAC,CAACmB,WAAW,CAAC,CACpC,CAAC,CAED6E,gBAAgB,CAAC,CAAC,CAClB3G,KAAK,CAAC2C,OAAO,CAAC,mCAAmC,CAAC,CAClD,MAAO,CAAA+D,YAAY,CACrB,CACF,CAAC,CAED;AACA,OACE1E,cAAc,CACdqC,cAAc,CACda,eAAe,CACfc,mBAAmB,CACnBgB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}