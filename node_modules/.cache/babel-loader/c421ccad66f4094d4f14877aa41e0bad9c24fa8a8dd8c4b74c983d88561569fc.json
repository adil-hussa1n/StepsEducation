{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMemo } from 'react';\n\n/**\r\n * Custom hook to provide consistent theme colors across the application\r\n * @returns {Object} Theme object with colors, gradients, and styles\r\n */\nconst useTheme = () => {\n  _s();\n  const theme = useMemo(() => ({\n    colors: {\n      primary: {\n        50: '#eef2ff',\n        100: '#e0e7ff',\n        200: '#c7d2fe',\n        300: '#a5b4fc',\n        400: '#818cf8',\n        500: '#6366f1',\n        // indigo-500\n        600: '#4f46e5',\n        // indigo-600\n        700: '#4338ca',\n        800: '#3730a3',\n        900: '#312e81'\n      },\n      secondary: {\n        50: '#eff6ff',\n        100: '#dbeafe',\n        200: '#bfdbfe',\n        300: '#93c5fd',\n        400: '#60a5fa',\n        500: '#3b82f6',\n        // blue-500\n        600: '#2563eb',\n        // blue-600\n        700: '#1d4ed8',\n        800: '#1e40af',\n        900: '#1e3a8a'\n      },\n      accent: {\n        50: '#faf5ff',\n        100: '#f3e8ff',\n        200: '#e9d5ff',\n        300: '#d8b4fe',\n        400: '#c084fc',\n        500: '#a855f7',\n        // purple-500\n        600: '#9333ea',\n        // purple-600\n        700: '#7e22ce',\n        800: '#6b21a8',\n        900: '#581c87'\n      },\n      gray: {\n        50: '#f9fafb',\n        100: '#f3f4f6',\n        200: '#e5e7eb',\n        300: '#d1d5db',\n        400: '#9ca3af',\n        500: '#6b7280',\n        600: '#4b5563',\n        700: '#374151',\n        800: '#1f2937',\n        900: '#111827'\n      },\n      success: '#10b981',\n      // emerald-500\n      warning: '#f59e0b',\n      // amber-500\n      error: '#ef4444',\n      // red-500\n      info: '#06b6d4' // cyan-500\n    },\n    gradients: {\n      primary: 'bg-gradient-to-r from-indigo-600 to-blue-500',\n      primaryHover: 'hover:from-indigo-700 hover:to-blue-600',\n      hero: 'bg-gradient-to-br from-indigo-900/90 via-blue-800/70 to-purple-800/60',\n      text: 'bg-clip-text text-transparent bg-gradient-to-r from-indigo-700 to-blue-500',\n      lightText: 'bg-clip-text text-transparent bg-gradient-to-r from-white via-blue-200 to-indigo-100'\n    },\n    components: {\n      button: {\n        primary: `px-6 py-3 bg-gradient-to-r from-indigo-600 to-blue-500 text-white font-semibold \n                 rounded-full hover:from-indigo-700 hover:to-blue-600 shadow-lg shadow-indigo-500/30 \n                 transition-all duration-300 text-center transform hover:-translate-y-1`,\n        secondary: `px-6 py-3 bg-white border border-indigo-200 text-indigo-600 font-semibold \n                   rounded-full hover:bg-indigo-50 hover:border-indigo-300 transition-all \n                   duration-300 text-center transform hover:-translate-y-1`,\n        outline: `px-6 py-3 bg-white/10 backdrop-blur-md border border-white/30 text-white \n                 font-semibold rounded-full hover:bg-white/20 transition-all duration-300 \n                 text-center transform hover:-translate-y-1`\n      },\n      card: {\n        glass: `bg-white/10 backdrop-blur-md rounded-2xl border border-white/20 shadow-xl`,\n        solid: `bg-white rounded-xl shadow-lg border border-gray-100 hover:shadow-xl \n               hover:border-indigo-100 transition-all duration-300`\n      },\n      input: `w-full px-4 py-3 bg-gray-50 border border-gray-200 rounded-lg focus:ring-2 \n             focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200`\n    },\n    // Add utility functions as needed\n    utils: {\n      hexToRgba: (hex, alpha = 1) => {\n        const r = parseInt(hex.slice(1, 3), 16);\n        const g = parseInt(hex.slice(3, 5), 16);\n        const b = parseInt(hex.slice(5, 7), 16);\n        return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n      }\n    }\n  }), []);\n  return theme;\n};\n_s(useTheme, \"TF0AHbRu8DO10P/SWtT0KIxHEhc=\");\nexport default useTheme;","map":{"version":3,"names":["useMemo","useTheme","_s","theme","colors","primary","secondary","accent","gray","success","warning","error","info","gradients","primaryHover","hero","text","lightText","components","button","outline","card","glass","solid","input","utils","hexToRgba","hex","alpha","r","parseInt","slice","g","b"],"sources":["X:/redu/gradway/frontend/src/hooks/useTheme.js"],"sourcesContent":["import { useMemo } from 'react';\r\n\r\n/**\r\n * Custom hook to provide consistent theme colors across the application\r\n * @returns {Object} Theme object with colors, gradients, and styles\r\n */\r\nconst useTheme = () => {\r\n  const theme = useMemo(() => ({\r\n    colors: {\r\n      primary: {\r\n        50: '#eef2ff',\r\n        100: '#e0e7ff',\r\n        200: '#c7d2fe',\r\n        300: '#a5b4fc',\r\n        400: '#818cf8',\r\n        500: '#6366f1',  // indigo-500\r\n        600: '#4f46e5',  // indigo-600\r\n        700: '#4338ca',\r\n        800: '#3730a3',\r\n        900: '#312e81',\r\n      },\r\n      secondary: {\r\n        50: '#eff6ff',\r\n        100: '#dbeafe',\r\n        200: '#bfdbfe',\r\n        300: '#93c5fd',\r\n        400: '#60a5fa',\r\n        500: '#3b82f6',  // blue-500\r\n        600: '#2563eb',  // blue-600\r\n        700: '#1d4ed8',\r\n        800: '#1e40af',\r\n        900: '#1e3a8a',\r\n      },\r\n      accent: {\r\n        50: '#faf5ff',\r\n        100: '#f3e8ff',\r\n        200: '#e9d5ff',\r\n        300: '#d8b4fe',\r\n        400: '#c084fc',\r\n        500: '#a855f7',  // purple-500\r\n        600: '#9333ea',  // purple-600\r\n        700: '#7e22ce',\r\n        800: '#6b21a8',\r\n        900: '#581c87',\r\n      },\r\n      gray: {\r\n        50: '#f9fafb',\r\n        100: '#f3f4f6',\r\n        200: '#e5e7eb',\r\n        300: '#d1d5db',\r\n        400: '#9ca3af',\r\n        500: '#6b7280',\r\n        600: '#4b5563',\r\n        700: '#374151',\r\n        800: '#1f2937',\r\n        900: '#111827',\r\n      },\r\n      success: '#10b981',  // emerald-500\r\n      warning: '#f59e0b',  // amber-500\r\n      error: '#ef4444',    // red-500\r\n      info: '#06b6d4',     // cyan-500\r\n    },\r\n    \r\n    gradients: {\r\n      primary: 'bg-gradient-to-r from-indigo-600 to-blue-500',\r\n      primaryHover: 'hover:from-indigo-700 hover:to-blue-600',\r\n      hero: 'bg-gradient-to-br from-indigo-900/90 via-blue-800/70 to-purple-800/60',\r\n      text: 'bg-clip-text text-transparent bg-gradient-to-r from-indigo-700 to-blue-500',\r\n      lightText: 'bg-clip-text text-transparent bg-gradient-to-r from-white via-blue-200 to-indigo-100',\r\n    },\r\n    \r\n    components: {\r\n      button: {\r\n        primary: `px-6 py-3 bg-gradient-to-r from-indigo-600 to-blue-500 text-white font-semibold \r\n                 rounded-full hover:from-indigo-700 hover:to-blue-600 shadow-lg shadow-indigo-500/30 \r\n                 transition-all duration-300 text-center transform hover:-translate-y-1`,\r\n        secondary: `px-6 py-3 bg-white border border-indigo-200 text-indigo-600 font-semibold \r\n                   rounded-full hover:bg-indigo-50 hover:border-indigo-300 transition-all \r\n                   duration-300 text-center transform hover:-translate-y-1`,\r\n        outline: `px-6 py-3 bg-white/10 backdrop-blur-md border border-white/30 text-white \r\n                 font-semibold rounded-full hover:bg-white/20 transition-all duration-300 \r\n                 text-center transform hover:-translate-y-1`,\r\n      },\r\n      card: {\r\n        glass: `bg-white/10 backdrop-blur-md rounded-2xl border border-white/20 shadow-xl`,\r\n        solid: `bg-white rounded-xl shadow-lg border border-gray-100 hover:shadow-xl \r\n               hover:border-indigo-100 transition-all duration-300`,\r\n      },\r\n      input: `w-full px-4 py-3 bg-gray-50 border border-gray-200 rounded-lg focus:ring-2 \r\n             focus:ring-indigo-500 focus:border-indigo-500 transition-all duration-200`,\r\n    },\r\n    \r\n    // Add utility functions as needed\r\n    utils: {\r\n      hexToRgba: (hex, alpha = 1) => {\r\n        const r = parseInt(hex.slice(1, 3), 16);\r\n        const g = parseInt(hex.slice(3, 5), 16);\r\n        const b = parseInt(hex.slice(5, 7), 16);\r\n        return `rgba(${r}, ${g}, ${b}, ${alpha})`;\r\n      },\r\n    }\r\n  }), []);\r\n\r\n  return theme;\r\n};\r\n\r\nexport default useTheme; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}