{"ast":null,"code":"var _jsxFileName = \"X:\\\\gradway\\\\frontend\\\\src\\\\pages\\\\admin\\\\ContentManagement.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n// Import local admin data service instead of Redux actions\nimport AdminDataService from './AdminDataService';\nimport { toast } from 'react-toastify';\nimport LoadingSpinner from '../../components/shared/LoadingSpinner';\nimport ErrorMessage from '../../components/shared/ErrorMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SECTION_TEMPLATES = {\n  hero: {\n    name: 'hero',\n    fields: {\n      title: '',\n      subtitle: '',\n      buttonText: '',\n      buttonLink: '',\n      backgroundImage: ''\n    }\n  },\n  services: {\n    name: 'services',\n    isRepeatable: true,\n    items: []\n  },\n  testimonials: {\n    name: 'testimonials',\n    isRepeatable: true,\n    items: []\n  }\n};\nconst ContentManagement = () => {\n  _s();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [content, setContent] = useState(null);\n  const [allContent, setAllContent] = useState([]);\n  const [selectedPage, setSelectedPage] = useState('home');\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    template: 'default',\n    sections: [],\n    meta: {\n      title: '',\n      description: '',\n      keywords: []\n    }\n  });\n\n  // Load all content on component mount\n  useEffect(() => {\n    const loadAllContent = async () => {\n      try {\n        setLoading(true);\n        const data = await AdminDataService.getAllContent();\n        setAllContent(data);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message || 'Failed to load content');\n        setLoading(false);\n      }\n    };\n    loadAllContent();\n  }, []);\n\n  // Load selected page content\n  useEffect(() => {\n    const loadPageContent = async () => {\n      if (selectedPage) {\n        try {\n          setLoading(true);\n          const data = await AdminDataService.getContentBySlug(selectedPage);\n          setContent(data);\n          setLoading(false);\n        } catch (err) {\n          setContent(null);\n          setLoading(false);\n        }\n      }\n    };\n    loadPageContent();\n  }, [selectedPage]);\n  useEffect(() => {\n    if (content) {\n      setFormData({\n        title: content.title || '',\n        description: content.description || '',\n        template: content.template || 'default',\n        sections: content.sections || [],\n        meta: content.meta || {\n          title: '',\n          description: '',\n          keywords: []\n        }\n      });\n    }\n  }, [content]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      setLoading(true);\n      if (content) {\n        // Update existing content\n        const updatedContent = await AdminDataService.updateContent(content._id, formData);\n        setContent(updatedContent);\n\n        // Refresh all content list\n        const allData = await AdminDataService.getAllContent();\n        setAllContent(allData);\n      } else {\n        // Create new content\n        const newContent = await AdminDataService.createContent({\n          ...formData,\n          slug: selectedPage\n        });\n        setContent(newContent);\n\n        // Refresh all content list\n        const allData = await AdminDataService.getAllContent();\n        setAllContent(allData);\n      }\n      setLoading(false);\n    } catch (error) {\n      toast.error(error.message || 'Something went wrong');\n      setLoading(false);\n    }\n  };\n  const handleSectionChange = (sectionName, sectionData) => {\n    setFormData(prev => ({\n      ...prev,\n      sections: prev.sections.map(section => section.name === sectionName ? {\n        ...section,\n        ...sectionData\n      } : section)\n    }));\n  };\n  const handleAddSection = templateName => {\n    const template = SECTION_TEMPLATES[templateName];\n    if (!template) return;\n    setFormData(prev => ({\n      ...prev,\n      sections: [...prev.sections, {\n        ...template\n      }]\n    }));\n  };\n  const handleAddSectionItem = async (sectionName, itemData) => {\n    try {\n      setLoading(true);\n      const updatedContent = await AdminDataService.addSectionItem(content._id, sectionName, itemData);\n      setContent(updatedContent);\n\n      // Update form data to reflect changes\n      setFormData({\n        ...formData,\n        sections: updatedContent.sections\n      });\n      setLoading(false);\n    } catch (error) {\n      toast.error(error.message || 'Failed to add item');\n      setLoading(false);\n    }\n  };\n  const handleUpdateSection = async (sectionName, sectionData) => {\n    try {\n      setLoading(true);\n      const updatedContent = await AdminDataService.updateContentSection(content._id, sectionName, sectionData);\n      setContent(updatedContent);\n\n      // Update form data to reflect changes\n      setFormData({\n        ...formData,\n        sections: updatedContent.sections\n      });\n      setLoading(false);\n    } catch (error) {\n      toast.error(error.message || 'Failed to update section');\n      setLoading(false);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    message: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 py-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold\",\n        children: \"Content Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setFormData(prev => ({\n          ...prev,\n          sections: []\n        })),\n        className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n        children: \"New Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-4 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-span-1 bg-white p-4 rounded shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Pages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"space-y-2\",\n          children: allContent === null || allContent === void 0 ? void 0 : allContent.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `cursor-pointer p-2 rounded ${selectedPage === item.slug ? 'bg-blue-100' : 'hover:bg-gray-100'}`,\n            onClick: () => setSelectedPage(item.slug),\n            children: item.title\n          }, item._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mt-8 mb-4\",\n          children: \"Add Section\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: Object.keys(SECTION_TEMPLATES).map(templateName => /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleAddSection(templateName),\n            className: \"w-full px-3 py-2 text-left text-sm rounded hover:bg-gray-100\",\n            children: templateName.charAt(0).toUpperCase() + templateName.slice(1)\n          }, templateName, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-span-3\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"space-y-6 bg-white p-6 rounded shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 gap-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-2\",\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: formData.title,\n                onChange: e => setFormData({\n                  ...formData,\n                  title: e.target.value\n                }),\n                className: \"w-full p-2 border rounded\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-2\",\n                children: \"Template\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: formData.template,\n                onChange: e => setFormData({\n                  ...formData,\n                  template: e.target.value\n                }),\n                className: \"w-full p-2 border rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"default\",\n                  children: \"Default\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"landing\",\n                  children: \"Landing Page\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"article\",\n                  children: \"Article\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700 mb-2\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: formData.description,\n              onChange: e => setFormData({\n                ...formData,\n                description: e.target.value\n              }),\n              className: \"w-full p-2 border rounded\",\n              rows: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-t pt-6 mt-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold mb-4\",\n              children: \"Sections\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this), formData.sections.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-500\",\n              children: \"No sections added yet. Add a section from the sidebar.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-6\",\n              children: formData.sections.map((section, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border p-4 rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"font-semibold text-lg mb-3 capitalize\",\n                  children: [section.name, \" Section\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 23\n                }, this), section.isRepeatable && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-4\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: () => handleAddSectionItem(section.name, {}),\n                    className: \"text-blue-600 text-sm hover:underline\",\n                    children: \"+ Add Item\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 25\n                }, this)]\n              }, `${section.name}-${index}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-t pt-6 mt-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold mb-4\",\n              children: \"Meta Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-sm font-medium text-gray-700 mb-2\",\n                  children: \"Meta Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: formData.meta.title || '',\n                  onChange: e => setFormData(prev => ({\n                    ...prev,\n                    meta: {\n                      ...prev.meta,\n                      title: e.target.value\n                    }\n                  })),\n                  className: \"w-full p-2 border rounded\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-sm font-medium text-gray-700 mb-2\",\n                  children: \"Meta Keywords\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: Array.isArray(formData.meta.keywords) ? formData.meta.keywords.join(', ') : formData.meta.keywords || '',\n                  onChange: e => setFormData(prev => ({\n                    ...prev,\n                    meta: {\n                      ...prev.meta,\n                      keywords: e.target.value.split(',').map(k => k.trim())\n                    }\n                  })),\n                  className: \"w-full p-2 border rounded\",\n                  placeholder: \"keyword1, keyword2, keyword3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-sm font-medium text-gray-700 mb-2\",\n                  children: \"Meta Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  value: formData.meta.description || '',\n                  onChange: e => setFormData(prev => ({\n                    ...prev,\n                    meta: {\n                      ...prev.meta,\n                      description: e.target.value\n                    }\n                  })),\n                  className: \"w-full p-2 border rounded\",\n                  rows: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700\",\n                children: content ? 'Update Content' : 'Create Content'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n};\n_s(ContentManagement, \"2QKjXU+ph4kSewT3VLCFHrJEq9k=\", false, function () {\n  return [useNavigate];\n});\n_c = ContentManagement;\nexport default ContentManagement;\nvar _c;\n$RefreshReg$(_c, \"ContentManagement\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","useNavigate","AdminDataService","toast","LoadingSpinner","ErrorMessage","jsxDEV","_jsxDEV","SECTION_TEMPLATES","hero","name","fields","title","subtitle","buttonText","buttonLink","backgroundImage","services","isRepeatable","items","testimonials","ContentManagement","_s","navigate","loading","setLoading","error","setError","content","setContent","allContent","setAllContent","selectedPage","setSelectedPage","formData","setFormData","description","template","sections","meta","keywords","loadAllContent","data","getAllContent","err","message","loadPageContent","getContentBySlug","handleSubmit","e","preventDefault","updatedContent","updateContent","_id","allData","newContent","createContent","slug","handleSectionChange","sectionName","sectionData","prev","map","section","handleAddSection","templateName","handleAddSectionItem","itemData","addSectionItem","handleUpdateSection","updateContentSection","fileName","_jsxFileName","lineNumber","columnNumber","className","children","type","onClick","item","Object","keys","charAt","toUpperCase","slice","onSubmit","value","onChange","target","required","rows","length","index","Array","isArray","join","split","k","trim","placeholder","_c","$RefreshReg$"],"sources":["X:/gradway/frontend/src/pages/admin/ContentManagement.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n// Import local admin data service instead of Redux actions\nimport AdminDataService from './AdminDataService';\nimport { toast } from 'react-toastify';\nimport LoadingSpinner from '../../components/shared/LoadingSpinner';\nimport ErrorMessage from '../../components/shared/ErrorMessage';\n\nconst SECTION_TEMPLATES = {\n  hero: {\n    name: 'hero',\n    fields: {\n      title: '',\n      subtitle: '',\n      buttonText: '',\n      buttonLink: '',\n      backgroundImage: ''\n    }\n  },\n  services: {\n    name: 'services',\n    isRepeatable: true,\n    items: []\n  },\n  testimonials: {\n    name: 'testimonials',\n    isRepeatable: true,\n    items: []\n  }\n};\n\nconst ContentManagement = () => {\n  const navigate = useNavigate();\n  \n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [content, setContent] = useState(null);\n  const [allContent, setAllContent] = useState([]);\n  const [selectedPage, setSelectedPage] = useState('home');\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    template: 'default',\n    sections: [],\n    meta: {\n      title: '',\n      description: '',\n      keywords: []\n    }\n  });\n\n  // Load all content on component mount\n  useEffect(() => {\n    const loadAllContent = async () => {\n      try {\n        setLoading(true);\n        const data = await AdminDataService.getAllContent();\n        setAllContent(data);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message || 'Failed to load content');\n        setLoading(false);\n      }\n    };\n    \n    loadAllContent();\n  }, []);\n\n  // Load selected page content\n  useEffect(() => {\n    const loadPageContent = async () => {\n      if (selectedPage) {\n        try {\n          setLoading(true);\n          const data = await AdminDataService.getContentBySlug(selectedPage);\n          setContent(data);\n          setLoading(false);\n        } catch (err) {\n          setContent(null);\n          setLoading(false);\n        }\n      }\n    };\n    \n    loadPageContent();\n  }, [selectedPage]);\n\n  useEffect(() => {\n    if (content) {\n      setFormData({\n        title: content.title || '',\n        description: content.description || '',\n        template: content.template || 'default',\n        sections: content.sections || [],\n        meta: content.meta || {\n          title: '',\n          description: '',\n          keywords: []\n        }\n      });\n    }\n  }, [content]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      setLoading(true);\n      if (content) {\n        // Update existing content\n        const updatedContent = await AdminDataService.updateContent(content._id, formData);\n        setContent(updatedContent);\n        \n        // Refresh all content list\n        const allData = await AdminDataService.getAllContent();\n        setAllContent(allData);\n      } else {\n        // Create new content\n        const newContent = await AdminDataService.createContent({ ...formData, slug: selectedPage });\n        setContent(newContent);\n        \n        // Refresh all content list\n        const allData = await AdminDataService.getAllContent();\n        setAllContent(allData);\n      }\n      setLoading(false);\n    } catch (error) {\n      toast.error(error.message || 'Something went wrong');\n      setLoading(false);\n    }\n  };\n\n  const handleSectionChange = (sectionName, sectionData) => {\n    setFormData(prev => ({\n      ...prev,\n      sections: prev.sections.map(section =>\n        section.name === sectionName ? { ...section, ...sectionData } : section\n      )\n    }));\n  };\n\n  const handleAddSection = (templateName) => {\n    const template = SECTION_TEMPLATES[templateName];\n    if (!template) return;\n\n    setFormData(prev => ({\n      ...prev,\n      sections: [...prev.sections, { ...template }]\n    }));\n  };\n\n  const handleAddSectionItem = async (sectionName, itemData) => {\n    try {\n      setLoading(true);\n      const updatedContent = await AdminDataService.addSectionItem(\n        content._id,\n        sectionName,\n        itemData\n      );\n      setContent(updatedContent);\n      \n      // Update form data to reflect changes\n      setFormData({\n        ...formData,\n        sections: updatedContent.sections\n      });\n      \n      setLoading(false);\n    } catch (error) {\n      toast.error(error.message || 'Failed to add item');\n      setLoading(false);\n    }\n  };\n\n  const handleUpdateSection = async (sectionName, sectionData) => {\n    try {\n      setLoading(true);\n      const updatedContent = await AdminDataService.updateContentSection(\n        content._id,\n        sectionName,\n        sectionData\n      );\n      setContent(updatedContent);\n      \n      // Update form data to reflect changes\n      setFormData({\n        ...formData,\n        sections: updatedContent.sections\n      });\n      \n      setLoading(false);\n    } catch (error) {\n      toast.error(error.message || 'Failed to update section');\n      setLoading(false);\n    }\n  };\n\n  if (loading) return <LoadingSpinner />;\n  if (error) return <ErrorMessage message={error} />;\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"flex justify-between items-center mb-8\">\n        <h1 className=\"text-3xl font-bold\">Content Management</h1>\n        <button\n          type=\"button\"\n          onClick={() => setFormData(prev => ({\n            ...prev,\n            sections: []\n          }))}\n          className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n        >\n          New Content\n        </button>\n      </div>\n\n      <div className=\"grid grid-cols-4 gap-6\">\n        {/* Sidebar */}\n        <div className=\"col-span-1 bg-white p-4 rounded shadow\">\n          <h2 className=\"text-lg font-semibold mb-4\">Pages</h2>\n          <ul className=\"space-y-2\">\n            {allContent?.map(item => (\n              <li\n                key={item._id}\n                className={`cursor-pointer p-2 rounded ${selectedPage === item.slug ? 'bg-blue-100' : 'hover:bg-gray-100'}`}\n                onClick={() => setSelectedPage(item.slug)}\n              >\n                {item.title}\n              </li>\n            ))}\n          </ul>\n\n          <h2 className=\"text-lg font-semibold mt-8 mb-4\">Add Section</h2>\n          <div className=\"space-y-2\">\n            {Object.keys(SECTION_TEMPLATES).map(templateName => (\n              <button\n                key={templateName}\n                type=\"button\"\n                onClick={() => handleAddSection(templateName)}\n                className=\"w-full px-3 py-2 text-left text-sm rounded hover:bg-gray-100\"\n              >\n                {templateName.charAt(0).toUpperCase() + templateName.slice(1)}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"col-span-3\">\n          <form onSubmit={handleSubmit} className=\"space-y-6 bg-white p-6 rounded shadow\">\n            <div className=\"grid grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Title\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.title}\n                  onChange={(e) => setFormData({ ...formData, title: e.target.value })}\n                  className=\"w-full p-2 border rounded\"\n                  required\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Template\n                </label>\n                <select\n                  value={formData.template}\n                  onChange={(e) => setFormData({ ...formData, template: e.target.value })}\n                  className=\"w-full p-2 border rounded\"\n                >\n                  <option value=\"default\">Default</option>\n                  <option value=\"landing\">Landing Page</option>\n                  <option value=\"article\">Article</option>\n                </select>\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Description\n              </label>\n              <textarea\n                value={formData.description}\n                onChange={(e) => setFormData({ ...formData, description: e.target.value })}\n                className=\"w-full p-2 border rounded\"\n                rows=\"3\"\n              />\n            </div>\n\n            <div className=\"border-t pt-6 mt-6\">\n              <h2 className=\"text-xl font-semibold mb-4\">Sections</h2>\n              \n              {formData.sections.length === 0 ? (\n                <p className=\"text-gray-500\">No sections added yet. Add a section from the sidebar.</p>\n              ) : (\n                <div className=\"space-y-6\">\n                  {formData.sections.map((section, index) => (\n                    <div key={`${section.name}-${index}`} className=\"border p-4 rounded\">\n                      <h3 className=\"font-semibold text-lg mb-3 capitalize\">\n                        {section.name} Section\n                      </h3>\n                      \n                      {section.isRepeatable && (\n                        <div className=\"mb-4\">\n                          <button\n                            type=\"button\"\n                            onClick={() => handleAddSectionItem(section.name, {})}\n                            className=\"text-blue-600 text-sm hover:underline\"\n                          >\n                            + Add Item\n                          </button>\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            <div className=\"border-t pt-6 mt-6\">\n              <h2 className=\"text-xl font-semibold mb-4\">Meta Information</h2>\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Meta Title\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.meta.title || ''}\n                    onChange={(e) => setFormData(prev => ({\n                      ...prev,\n                      meta: { ...prev.meta, title: e.target.value }\n                    }))}\n                    className=\"w-full p-2 border rounded\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Meta Keywords\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={Array.isArray(formData.meta.keywords) ? formData.meta.keywords.join(', ') : formData.meta.keywords || ''}\n                    onChange={(e) => setFormData(prev => ({\n                      ...prev,\n                      meta: { \n                        ...prev.meta, \n                        keywords: e.target.value.split(',').map(k => k.trim())\n                      }\n                    }))}\n                    className=\"w-full p-2 border rounded\"\n                    placeholder=\"keyword1, keyword2, keyword3\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Meta Description\n                  </label>\n                  <textarea\n                    value={formData.meta.description || ''}\n                    onChange={(e) => setFormData(prev => ({\n                      ...prev,\n                      meta: { ...prev.meta, description: e.target.value }\n                    }))}\n                    className=\"w-full p-2 border rounded\"\n                    rows=\"3\"\n                  />\n                </div>\n\n                <button\n                  type=\"submit\"\n                  className=\"bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700\"\n                >\n                  {content ? 'Update Content' : 'Create Content'}\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContentManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}