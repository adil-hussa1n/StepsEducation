{"ast":null,"code":"import axios from'axios';const API_URL=process.env.REACT_APP_API_URL?`${process.env.REACT_APP_API_URL}/content`:'http://localhost:5000/api/content';const handleError=error=>{if(error.response){throw new Error(error.response.data.message||'Server error');}else if(error.request){throw new Error('Could not connect to server. Please check if the server is running.');}else{throw new Error('Error setting up the request');}};const getAuthConfig=token=>({headers:{Authorization:`Bearer ${token}`}});// Get all content with filters\nexport const getAllContent=async function(){let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{const params=new URLSearchParams(filters);const response=await axios.get(`${API_URL}?${params}`);return response.data;}catch(error){handleError(error);}};// Get content by slug\nexport const getContentBySlug=async slug=>{try{const response=await axios.get(`${API_URL}/${slug}`);return response.data;}catch(error){handleError(error);}};// Create content (admin only)\nexport const createContent=async(contentData,token)=>{try{const response=await axios.post(API_URL,contentData,getAuthConfig(token));return response.data;}catch(error){handleError(error);}};// Update content (admin only)\nexport const updateContent=async(contentId,contentData,token)=>{try{const response=await axios.put(`${API_URL}/${contentId}`,contentData,getAuthConfig(token));return response.data;}catch(error){handleError(error);}};// Delete content (admin only)\nexport const deleteContent=async(contentId,token)=>{try{const response=await axios.delete(`${API_URL}/${contentId}`,getAuthConfig(token));return response.data;}catch(error){handleError(error);}};// Update content section (admin only)\nexport const updateContentSection=async(contentId,sectionName,sectionData,token)=>{try{const response=await axios.put(`${API_URL}/${contentId}/sections/${sectionName}`,sectionData,getAuthConfig(token));return response.data;}catch(error){handleError(error);}};// Add item to repeatable section (admin only)\nexport const addSectionItem=async(contentId,sectionName,itemData,token)=>{try{const response=await axios.post(`${API_URL}/${contentId}/sections/${sectionName}/items`,itemData,getAuthConfig(token));return response.data;}catch(error){handleError(error);}};// Upload file (admin only)\nexport const uploadFile=async(file,token)=>{try{const formData=new FormData();formData.append('file',file);const response=await axios.post(`${API_URL}/upload`,formData,{...getAuthConfig(token),headers:{...getAuthConfig(token).headers,'Content-Type':'multipart/form-data'}});return response.data;}catch(error){handleError(error);}};const contentService={getAllContent,getContentBySlug,createContent,updateContent,deleteContent,updateContentSection,addSectionItem,uploadFile};export default contentService;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","handleError","error","response","Error","data","message","request","getAuthConfig","token","headers","Authorization","getAllContent","filters","arguments","length","undefined","params","URLSearchParams","get","getContentBySlug","slug","createContent","contentData","post","updateContent","contentId","put","deleteContent","delete","updateContentSection","sectionName","sectionData","addSectionItem","itemData","uploadFile","file","formData","FormData","append","contentService"],"sources":["X:/gradway/frontend/src/services/contentService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL ? `${process.env.REACT_APP_API_URL}/content` : 'http://localhost:5000/api/content';\n\nconst handleError = (error) => {\n  if (error.response) {\n    throw new Error(error.response.data.message || 'Server error');\n  } else if (error.request) {\n    throw new Error('Could not connect to server. Please check if the server is running.');\n  } else {\n    throw new Error('Error setting up the request');\n  }\n};\n\nconst getAuthConfig = (token) => ({\n  headers: {\n    Authorization: `Bearer ${token}`,\n  },\n});\n\n// Get all content with filters\nexport const getAllContent = async (filters = {}) => {\n  try {\n    const params = new URLSearchParams(filters);\n    const response = await axios.get(`${API_URL}?${params}`);\n    return response.data;\n  } catch (error) {\n    handleError(error);\n  }\n};\n\n// Get content by slug\nexport const getContentBySlug = async (slug) => {\n  try {\n    const response = await axios.get(`${API_URL}/${slug}`);\n    return response.data;\n  } catch (error) {\n    handleError(error);\n  }\n};\n\n// Create content (admin only)\nexport const createContent = async (contentData, token) => {\n  try {\n    const response = await axios.post(API_URL, contentData, getAuthConfig(token));\n    return response.data;\n  } catch (error) {\n    handleError(error);\n  }\n};\n\n// Update content (admin only)\nexport const updateContent = async (contentId, contentData, token) => {\n  try {\n    const response = await axios.put(\n      `${API_URL}/${contentId}`,\n      contentData,\n      getAuthConfig(token)\n    );\n    return response.data;\n  } catch (error) {\n    handleError(error);\n  }\n};\n\n// Delete content (admin only)\nexport const deleteContent = async (contentId, token) => {\n  try {\n    const response = await axios.delete(\n      `${API_URL}/${contentId}`,\n      getAuthConfig(token)\n    );\n    return response.data;\n  } catch (error) {\n    handleError(error);\n  }\n};\n\n// Update content section (admin only)\nexport const updateContentSection = async (contentId, sectionName, sectionData, token) => {\n  try {\n    const response = await axios.put(\n      `${API_URL}/${contentId}/sections/${sectionName}`,\n      sectionData,\n      getAuthConfig(token)\n    );\n    return response.data;\n  } catch (error) {\n    handleError(error);\n  }\n};\n\n// Add item to repeatable section (admin only)\nexport const addSectionItem = async (contentId, sectionName, itemData, token) => {\n  try {\n    const response = await axios.post(\n      `${API_URL}/${contentId}/sections/${sectionName}/items`,\n      itemData,\n      getAuthConfig(token)\n    );\n    return response.data;\n  } catch (error) {\n    handleError(error);\n  }\n};\n\n// Upload file (admin only)\nexport const uploadFile = async (file, token) => {\n  try {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    const response = await axios.post(\n      `${API_URL}/upload`,\n      formData,\n      {\n        ...getAuthConfig(token),\n        headers: {\n          ...getAuthConfig(token).headers,\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    handleError(error);\n  }\n};\n\nconst contentService = {\n  getAllContent,\n  getContentBySlug,\n  createContent,\n  updateContent,\n  deleteContent,\n  updateContentSection,\n  addSectionItem,\n  uploadFile,\n};\n\nexport default contentService; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}