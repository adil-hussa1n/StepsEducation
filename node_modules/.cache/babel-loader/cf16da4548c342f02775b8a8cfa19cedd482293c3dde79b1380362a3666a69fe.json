{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  token: localStorage.getItem('token'),\n  user: JSON.parse(localStorage.getItem('user')),\n  isAuthenticated: !!localStorage.getItem('token'),\n  loading: false,\n  error: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    loginStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    loginSuccess: (state, action) => {\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.token = action.payload.token;\n      state.user = action.payload.user;\n      localStorage.setItem('token', action.payload.token);\n      localStorage.setItem('user', JSON.stringify(action.payload.user));\n    },\n    loginFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.isAuthenticated = false;\n      state.token = null;\n      state.user = null;\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n    },\n    logout: state => {\n      state.isAuthenticated = false;\n      state.token = null;\n      state.user = null;\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n    },\n    clearError: state => {\n      state.error = null;\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  logout,\n  clearError\n} = authSlice.actions;\nexport const selectAuth = state => state.auth;\nexport const selectIsAuthenticated = state => state.auth.isAuthenticated;\nexport const selectUser = state => state.auth.user;\nexport const selectAuthLoading = state => state.auth.loading;\nexport const selectAuthError = state => state.auth.error;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","token","localStorage","getItem","user","JSON","parse","isAuthenticated","loading","error","authSlice","name","reducers","loginStart","state","loginSuccess","action","payload","setItem","stringify","loginFailure","removeItem","logout","clearError","actions","selectAuth","auth","selectIsAuthenticated","selectUser","selectAuthLoading","selectAuthError","reducer"],"sources":["X:/redu/gradway/frontend/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  user: JSON.parse(localStorage.getItem('user')),\n  isAuthenticated: !!localStorage.getItem('token'),\n  loading: false,\n  error: null,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    loginStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    loginSuccess: (state, action) => {\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.token = action.payload.token;\n      state.user = action.payload.user;\n      localStorage.setItem('token', action.payload.token);\n      localStorage.setItem('user', JSON.stringify(action.payload.user));\n    },\n    loginFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.isAuthenticated = false;\n      state.token = null;\n      state.user = null;\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n    },\n    logout: (state) => {\n      state.isAuthenticated = false;\n      state.token = null;\n      state.user = null;\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n    },\n    clearError: (state) => {\n      state.error = null;\n    },\n  },\n});\n\nexport const { loginStart, loginSuccess, loginFailure, logout, clearError } = authSlice.actions;\n\nexport const selectAuth = (state) => state.auth;\nexport const selectIsAuthenticated = (state) => state.auth.isAuthenticated;\nexport const selectUser = (state) => state.auth.user;\nexport const selectAuthLoading = (state) => state.auth.loading;\nexport const selectAuthError = (state) => state.auth.error;\n\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACpCC,IAAI,EAAEC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EAC9CI,eAAe,EAAE,CAAC,CAACL,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAChDK,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGX,WAAW,CAAC;EAC5BY,IAAI,EAAE,MAAM;EACZX,YAAY;EACZY,QAAQ,EAAE;IACRC,UAAU,EAAGC,KAAK,IAAK;MACrBA,KAAK,CAACN,OAAO,GAAG,IAAI;MACpBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDM,YAAY,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC/BF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACP,eAAe,GAAG,IAAI;MAC5BO,KAAK,CAACb,KAAK,GAAGe,MAAM,CAACC,OAAO,CAAChB,KAAK;MAClCa,KAAK,CAACV,IAAI,GAAGY,MAAM,CAACC,OAAO,CAACb,IAAI;MAChCF,YAAY,CAACgB,OAAO,CAAC,OAAO,EAAEF,MAAM,CAACC,OAAO,CAAChB,KAAK,CAAC;MACnDC,YAAY,CAACgB,OAAO,CAAC,MAAM,EAAEb,IAAI,CAACc,SAAS,CAACH,MAAM,CAACC,OAAO,CAACb,IAAI,CAAC,CAAC;IACnE,CAAC;IACDgB,YAAY,EAAEA,CAACN,KAAK,EAAEE,MAAM,KAAK;MAC/BF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO;MAC5BH,KAAK,CAACP,eAAe,GAAG,KAAK;MAC7BO,KAAK,CAACb,KAAK,GAAG,IAAI;MAClBa,KAAK,CAACV,IAAI,GAAG,IAAI;MACjBF,YAAY,CAACmB,UAAU,CAAC,OAAO,CAAC;MAChCnB,YAAY,CAACmB,UAAU,CAAC,MAAM,CAAC;IACjC,CAAC;IACDC,MAAM,EAAGR,KAAK,IAAK;MACjBA,KAAK,CAACP,eAAe,GAAG,KAAK;MAC7BO,KAAK,CAACb,KAAK,GAAG,IAAI;MAClBa,KAAK,CAACV,IAAI,GAAG,IAAI;MACjBF,YAAY,CAACmB,UAAU,CAAC,OAAO,CAAC;MAChCnB,YAAY,CAACmB,UAAU,CAAC,MAAM,CAAC;IACjC,CAAC;IACDE,UAAU,EAAGT,KAAK,IAAK;MACrBA,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,UAAU;EAAEE,YAAY;EAAEK,YAAY;EAAEE,MAAM;EAAEC;AAAW,CAAC,GAAGb,SAAS,CAACc,OAAO;AAE/F,OAAO,MAAMC,UAAU,GAAIX,KAAK,IAAKA,KAAK,CAACY,IAAI;AAC/C,OAAO,MAAMC,qBAAqB,GAAIb,KAAK,IAAKA,KAAK,CAACY,IAAI,CAACnB,eAAe;AAC1E,OAAO,MAAMqB,UAAU,GAAId,KAAK,IAAKA,KAAK,CAACY,IAAI,CAACtB,IAAI;AACpD,OAAO,MAAMyB,iBAAiB,GAAIf,KAAK,IAAKA,KAAK,CAACY,IAAI,CAAClB,OAAO;AAC9D,OAAO,MAAMsB,eAAe,GAAIhB,KAAK,IAAKA,KAAK,CAACY,IAAI,CAACjB,KAAK;AAE1D,eAAeC,SAAS,CAACqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}