{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport contentService from '../../services/contentService';\n\n// Async thunks\nexport const fetchContentBySlug = createAsyncThunk('content/fetchBySlug', async (slug, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await contentService.getContentBySlug(slug);\n    return response;\n  } catch (error) {\n    var _error$response;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  }\n});\nexport const fetchAllContent = createAsyncThunk('content/fetchAll', async (filters, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await contentService.getAllContent(filters);\n    return response;\n  } catch (error) {\n    var _error$response2;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n  }\n});\nexport const createContent = createAsyncThunk('content/create', async (contentData, {\n  getState,\n  rejectWithValue\n}) => {\n  try {\n    const {\n      user\n    } = getState().auth;\n    return await contentService.createContent(contentData, user.token);\n  } catch (error) {\n    var _error$response3;\n    return rejectWithValue(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n  }\n});\nexport const updateContent = createAsyncThunk('content/update', async ({\n  id,\n  contentData\n}, {\n  getState,\n  rejectWithValue\n}) => {\n  try {\n    const {\n      user\n    } = getState().auth;\n    return await contentService.updateContent(id, contentData, user.token);\n  } catch (error) {\n    var _error$response4;\n    return rejectWithValue(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n  }\n});\nexport const updateContentSection = createAsyncThunk('content/updateSection', async ({\n  id,\n  sectionName,\n  sectionData\n}, {\n  getState,\n  rejectWithValue\n}) => {\n  try {\n    const {\n      user\n    } = getState().auth;\n    return await contentService.updateContentSection(id, sectionName, sectionData, user.token);\n  } catch (error) {\n    var _error$response5;\n    return rejectWithValue(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n  }\n});\nexport const addSectionItem = createAsyncThunk('content/addSectionItem', async ({\n  id,\n  sectionName,\n  itemData\n}, {\n  getState,\n  rejectWithValue\n}) => {\n  try {\n    const {\n      user\n    } = getState().auth;\n    return await contentService.addSectionItem(id, sectionName, itemData, user.token);\n  } catch (error) {\n    var _error$response6;\n    return rejectWithValue(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message);\n  }\n});\nconst initialState = {\n  content: null,\n  allContent: [],\n  loading: false,\n  error: null,\n  success: false,\n  lastUpdated: null\n};\nconst contentSlice = createSlice({\n  name: 'content',\n  initialState,\n  reducers: {\n    setContent: (state, action) => {\n      state.content = action.payload;\n    },\n    resetContent: state => {\n      state.content = null;\n      state.loading = false;\n      state.error = null;\n      state.success = false;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Fetch content\n    .addCase(fetchContentByPage.pending, state => {\n      state.loading = true;\n      state.error = null;\n      state.success = false;\n    }).addCase(fetchContentByPage.fulfilled, (state, action) => {\n      state.loading = false;\n      state.content = action.payload;\n      state.success = true;\n    }).addCase(fetchContentByPage.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.success = false;\n    })\n    // Create content\n    .addCase(createContent.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(createContent.fulfilled, (state, action) => {\n      state.loading = false;\n      state.content = action.payload;\n      state.success = true;\n    }).addCase(createContent.rejected, (state, action) => {\n      var _action$payload;\n      state.loading = false;\n      state.error = ((_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.message) || 'Failed to create content';\n    })\n    // Update content\n    .addCase(updateContent.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(updateContent.fulfilled, (state, action) => {\n      state.loading = false;\n      state.content = action.payload;\n      state.success = true;\n    }).addCase(updateContent.rejected, (state, action) => {\n      var _action$payload2;\n      state.loading = false;\n      state.error = ((_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.message) || 'Failed to update content';\n    });\n  }\n});\nexport const {\n  setContent,\n  resetContent\n} = contentSlice.actions;\nexport default contentSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","contentService","fetchContentBySlug","slug","rejectWithValue","response","getContentBySlug","error","_error$response","data","message","fetchAllContent","filters","getAllContent","_error$response2","createContent","contentData","getState","user","auth","token","_error$response3","updateContent","id","_error$response4","updateContentSection","sectionName","sectionData","_error$response5","addSectionItem","itemData","_error$response6","initialState","content","allContent","loading","success","lastUpdated","contentSlice","name","reducers","setContent","state","action","payload","resetContent","extraReducers","builder","addCase","fetchContentByPage","pending","fulfilled","rejected","_action$payload","_action$payload2","actions","reducer"],"sources":["X:/gradway/frontend/src/features/content/contentSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport contentService from '../../services/contentService';\n\n// Async thunks\nexport const fetchContentBySlug = createAsyncThunk(\n  'content/fetchBySlug',\n  async (slug, { rejectWithValue }) => {\n    try {\n      const response = await contentService.getContentBySlug(slug);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data || error.message);\n    }\n  }\n);\n\nexport const fetchAllContent = createAsyncThunk(\n  'content/fetchAll',\n  async (filters, { rejectWithValue }) => {\n    try {\n      const response = await contentService.getAllContent(filters);\n      return response;\n    } catch (error) {\n      return rejectWithValue(error.response?.data || error.message);\n    }\n  }\n);\n\nexport const createContent = createAsyncThunk(\n  'content/create',\n  async (contentData, { getState, rejectWithValue }) => {\n    try {\n      const { user } = getState().auth;\n      return await contentService.createContent(contentData, user.token);\n    } catch (error) {\n      return rejectWithValue(error.response?.data || error.message);\n    }\n  }\n);\n\nexport const updateContent = createAsyncThunk(\n  'content/update',\n  async ({ id, contentData }, { getState, rejectWithValue }) => {\n    try {\n      const { user } = getState().auth;\n      return await contentService.updateContent(id, contentData, user.token);\n    } catch (error) {\n      return rejectWithValue(error.response?.data || error.message);\n    }\n  }\n);\n\nexport const updateContentSection = createAsyncThunk(\n  'content/updateSection',\n  async ({ id, sectionName, sectionData }, { getState, rejectWithValue }) => {\n    try {\n      const { user } = getState().auth;\n      return await contentService.updateContentSection(id, sectionName, sectionData, user.token);\n    } catch (error) {\n      return rejectWithValue(error.response?.data || error.message);\n    }\n  }\n);\n\nexport const addSectionItem = createAsyncThunk(\n  'content/addSectionItem',\n  async ({ id, sectionName, itemData }, { getState, rejectWithValue }) => {\n    try {\n      const { user } = getState().auth;\n      return await contentService.addSectionItem(id, sectionName, itemData, user.token);\n    } catch (error) {\n      return rejectWithValue(error.response?.data || error.message);\n    }\n  }\n);\n\nconst initialState = {\n  content: null,\n  allContent: [],\n  loading: false,\n  error: null,\n  success: false,\n  lastUpdated: null,\n};\n\nconst contentSlice = createSlice({\n  name: 'content',\n  initialState,\n  reducers: {\n    setContent: (state, action) => {\n      state.content = action.payload;\n    },\n    resetContent: (state) => {\n      state.content = null;\n      state.loading = false;\n      state.error = null;\n      state.success = false;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Fetch content\n      .addCase(fetchContentByPage.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n        state.success = false;\n      })\n      .addCase(fetchContentByPage.fulfilled, (state, action) => {\n        state.loading = false;\n        state.content = action.payload;\n        state.success = true;\n      })\n      .addCase(fetchContentByPage.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n        state.success = false;\n      })\n      // Create content\n      .addCase(createContent.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(createContent.fulfilled, (state, action) => {\n        state.loading = false;\n        state.content = action.payload;\n        state.success = true;\n      })\n      .addCase(createContent.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload?.message || 'Failed to create content';\n      })\n      // Update content\n      .addCase(updateContent.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(updateContent.fulfilled, (state, action) => {\n        state.loading = false;\n        state.content = action.payload;\n        state.success = true;\n      })\n      .addCase(updateContent.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload?.message || 'Failed to update content';\n      });\n  },\n});\n\nexport const { setContent, resetContent } = contentSlice.actions;\nexport default contentSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}