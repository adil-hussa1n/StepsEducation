{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst handleError = error => {\n  if (error.response) {\n    // Server responded with an error\n    throw new Error(error.response.data.message || 'Server error');\n  } else if (error.request) {\n    // No response received\n    throw new Error('Could not connect to server. Please check if the server is running.');\n  } else {\n    // Error in request setup\n    throw new Error('Error setting up the request');\n  }\n};\n\n// Course related functions\nexport const getCourses = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/courses`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching courses:', error);\n    return [];\n  }\n};\n\n// Testimonial related functions\nexport const getTestimonials = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/testimonials`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching testimonials:', error);\n    return [];\n  }\n};\n\n// Service related functions\nexport const getServices = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/services`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching services:', error);\n    return [];\n  }\n};\n\n// Content management functions\nexport const getAllContent = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/content`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching content:', error);\n    return [];\n  }\n};\nexport const getContentByPage = async page => {\n  try {\n    const response = await axios.get(`${API_URL}/content/${page}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching content by page:', error);\n    return null;\n  }\n};\nexport const createContent = async contentData => {\n  try {\n    const response = await axios.post(`${API_URL}/content`, contentData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating content:', error);\n    throw error;\n  }\n};\nexport const updateContent = async (id, contentData) => {\n  try {\n    const response = await axios.put(`${API_URL}/content/${id}`, contentData);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating content:', error);\n    throw error;\n  }\n};\nexport const deleteContent = async id => {\n  try {\n    const response = await axios.delete(`${API_URL}/content/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting content:', error);\n    throw error;\n  }\n};\nconst contentService = {\n  getAllContent,\n  getContentByPage,\n  createContent,\n  updateContent,\n  deleteContent\n};\nexport default contentService;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","handleError","error","response","Error","data","message","request","getCourses","get","console","getTestimonials","getServices","getAllContent","getContentByPage","page","createContent","contentData","post","updateContent","id","put","deleteContent","delete","contentService"],"sources":["X:/gradway/frontend/src/services/contentService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nconst handleError = (error) => {\r\n  if (error.response) {\r\n    // Server responded with an error\r\n    throw new Error(error.response.data.message || 'Server error');\r\n  } else if (error.request) {\r\n    // No response received\r\n    throw new Error('Could not connect to server. Please check if the server is running.');\r\n  } else {\r\n    // Error in request setup\r\n    throw new Error('Error setting up the request');\r\n  }\r\n};\r\n\r\n// Course related functions\r\nexport const getCourses = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/courses`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching courses:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// Testimonial related functions\r\nexport const getTestimonials = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/testimonials`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching testimonials:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// Service related functions\r\nexport const getServices = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/services`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching services:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n// Content management functions\r\nexport const getAllContent = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/content`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching content:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const getContentByPage = async (page) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/content/${page}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching content by page:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const createContent = async (contentData) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/content`, contentData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error creating content:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateContent = async (id, contentData) => {\r\n  try {\r\n    const response = await axios.put(`${API_URL}/content/${id}`, contentData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error updating content:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteContent = async (id) => {\r\n  try {\r\n    const response = await axios.delete(`${API_URL}/content/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error deleting content:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst contentService = {\r\n  getAllContent,\r\n  getContentByPage,\r\n  createContent,\r\n  updateContent,\r\n  deleteContent,\r\n};\r\n\r\nexport default contentService; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}